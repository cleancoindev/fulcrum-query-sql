{"version":3,"sources":["../src/form-field-schema.js"],"names":["FormFieldSchema","fullSchema","addSystemColumn","label","attribute","columnName","column","_columns","push","_columnsByKey","addElementColumn","element","part","columnKey","key","_rawColumnsByKey","columnObject","setupElementColumns","elementsForColumns","isHidden","hasHiddenParent","isAddressElement","isPhotoElement","isVideoElement","isAudioElement","isSignatureElement","findColumnByID","id","columns","find","e","columnForFieldKey","fieldKey","_allElements","container","flattenElements","_elementsForColumns","elements","allElements","skip","isSectionElement","isRepeatableElement","isLabelElement"],"mappings":"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","file":"form-field-schema.js","sourcesContent":["import ElementColumn from './schema/element-column';\nimport SimpleColumn from './schema/simple-column';\n\nexport default class FormFieldSchema {\n  constructor({fullSchema = false}) {\n    this.fullSchema = fullSchema;\n  }\n\n  addSystemColumn(label, attribute, columnName) {\n    const column = new SimpleColumn(label, attribute, columnName);\n    this._columns.push(column);\n    this._columnsByKey[columnName] = column;\n  }\n\n  addElementColumn(element, part) {\n    const columnKey = part ? element.key + '_' + part : element.key;\n\n    const column = this._rawColumnsByKey[columnKey];\n\n    // if (column == null) {\n    //   if the column is null, that means it's a materialized column\n    //   throw new Error('Column not found for element ' + columnKey + Object.keys(this._rawColumnsByKey));\n    // }\n\n    const columnObject = new ElementColumn(element, column, null, part);\n\n    this._columns.push(columnObject);\n    this._columnsByKey[columnKey] = columnObject;\n  }\n\n  setupElementColumns() {\n    for (const element of this.elementsForColumns) {\n      if (element.isHidden || element.hasHiddenParent) {\n        continue;\n      }\n\n      this.addElementColumn(element);\n\n      if (this.fullSchema && element.isAddressElement) {\n        this.addElementColumn(element, 'sub_thoroughfare');\n        this.addElementColumn(element, 'thoroughfare');\n        this.addElementColumn(element, 'suite');\n        this.addElementColumn(element, 'locality');\n        this.addElementColumn(element, 'sub_admin_area');\n        this.addElementColumn(element, 'admin_area');\n        this.addElementColumn(element, 'postal_code');\n        this.addElementColumn(element, 'country');\n      }\n\n      if (this.fullSchema && (element.isPhotoElement || element.isVideoElement || element.isAudioElement)) {\n        this.addElementColumn(element, 'captions');\n        this.addElementColumn(element, 'urls');\n      }\n\n      if (this.fullSchema && element.isSignatureElement) {\n        this.addElementColumn(element, 'timestamp');\n      }\n    }\n  }\n\n  findColumnByID(id) {\n    return this.columns.find(e => e.id === id);\n  }\n\n  columnForFieldKey(fieldKey, part) {\n    if (part) {\n      return this._columnsByKey[fieldKey + '_' + part];\n    }\n\n    return this._columnsByKey[fieldKey];\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  get allElements() {\n    if (!this._allElements) {\n      this._allElements = this.container.flattenElements(false);\n    }\n    return this._allElements;\n  }\n\n  get elementsForColumns() {\n    if (!this._elementsForColumns) {\n      this._elementsForColumns = [];\n\n      const elements = this.allElements;\n\n      for (const element of elements) {\n        const skip = element.isSectionElement ||\n                     element.isRepeatableElement ||\n                     element.isLabelElement ||\n                     element.isHidden;\n\n        if (!skip) {\n          this._elementsForColumns.push(element);\n        }\n      }\n    }\n\n    return this._elementsForColumns;\n  }\n}\n"]}