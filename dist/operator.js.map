{"version":3,"sources":["../src/operator.js"],"names":["isValueRequired","availableOperatorsForColumn","OperatorType","Empty","name","label","NotEmpty","Equal","NotEqual","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","Between","NotBetween","In","NotIn","TextContain","TextNotContain","TextStartsWith","TextEndsWith","TextEqual","TextNotEqual","TextMatch","TextNotMatch","DateEqual","DateNotEqual","DateAfter","DateBefore","ArrayAnyOf","ArrayAllOf","ArrayNoneOf","ArrayEqual","Search","TEXTUAL_OPERATORS","DATE_OPERATORS","NUMERIC_OPERATORS","ARRAY_OPERATORS","GEOSPATIAL_OPERATORS","SYSTEM_COLUMNS","_record_id","_project_id","_assigned_to_id","_status","_latitude","_longitude","_created_at","_updated_at","_version","_created_by_id","_updated_by_id","_server_created_at","_server_updated_at","_geometry","_altitude","_speed","_course","_horizontal_accuracy","_vertical_accuracy","_changeset_id","_title","_created_latitude","_created_longitude","_created_geometry","_created_altitude","_created_horizontal_accuracy","_updated_latitude","_updated_longitude","_updated_geometry","_updated_altitude","_updated_horizontal_accuracy","_created_duration","_updated_duration","_edited_duration","operator","column","operators","id","element","isTextElement","isNumeric","push","apply","isCalculatedElement","display","isNumber","isCurrency","isDate","isDateElement","isChoiceElement","multiple","isClassificationElement","isStatusElement"],"mappings":"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","file":"operator.js","sourcesContent":["export const OperatorType = {\n  Empty: {\n    name: 'is_empty',\n    label: 'Is blank'\n  },\n\n  NotEmpty: {\n    name: 'is_not_empty',\n    label: 'Is not blank'\n  },\n\n  Equal: {\n    name: 'equal',\n    label: 'Equals'\n  },\n\n  NotEqual: {\n    name: 'not_equal',\n    label: 'Does not equal'\n  },\n\n  GreaterThan: {\n    name: 'greater_than',\n    label: 'Greater than'\n  },\n\n  GreaterThanOrEqual: {\n    name: 'greater_than_or_equal',\n    label: 'Greater than or equal to'\n  },\n\n  LessThan: {\n    name: 'less_than',\n    label: 'Less than'\n  },\n\n  LessThanOrEqual: {\n    name: 'less_than_or_equal',\n    label: 'Less than or equal to'\n  },\n\n  Between: {\n    name: 'between',\n    label: 'Between'\n  },\n\n  NotBetween: {\n    name: 'not_between',\n    label: 'Not between'\n  },\n\n  In: {\n    name: 'in',\n    label: 'One of'\n  },\n\n  NotIn: {\n    name: 'not_in',\n    label: 'Not one of'\n  },\n\n  TextContain: {\n    name: 'text_contain',\n    label: 'Contains'\n  },\n\n  TextNotContain: {\n    name: 'text_not_contain',\n    label: 'Does not contain'\n  },\n\n  TextStartsWith: {\n    name: 'text_starts_with',\n    label: 'Starts with'\n  },\n\n  TextEndsWith: {\n    name: 'text_ends_with',\n    label: 'Ends with'\n  },\n\n  TextEqual: {\n    name: 'text_equal',\n    label: 'Equals'\n  },\n\n  TextNotEqual: {\n    name: 'text_not_equal',\n    label: 'Does not equal'\n  },\n\n  TextMatch: {\n    name: 'text_match',\n    label: 'Matches regex'\n  },\n\n  TextNotMatch: {\n    name: 'text_not_match',\n    label: 'Does not match regex'\n  },\n\n  DateEqual: {\n    name: 'date_equal',\n    label: 'Equals'\n  },\n\n  DateNotEqual: {\n    name: 'date_not_equal',\n    label: 'Does not equal'\n  },\n\n  DateAfter: {\n    name: 'date_after',\n    label: 'After'\n  },\n\n  DateBefore: {\n    name: 'date_before',\n    label: 'Before'\n  },\n\n  ArrayAnyOf: {\n    name: 'array_any_of',\n    label: 'Any of'\n  },\n\n  ArrayAllOf: {\n    name: 'array_all_of',\n    label: 'All of'\n  },\n\n  ArrayNoneOf: {\n    name: 'array_none_of',\n    label: 'None of'\n  },\n\n  ArrayEqual: {\n    name: 'array_equal',\n    label: 'Equals'\n  },\n\n  Search: {\n    name: 'search',\n    label: 'Search'\n  }\n};\n\nconst TEXTUAL_OPERATORS = [\n  OperatorType.TextContain,\n  OperatorType.TextNotContain,\n  OperatorType.TextStartsWith,\n  OperatorType.TextEndsWith,\n  OperatorType.TextEqual,\n  OperatorType.TextNotEqual,\n  OperatorType.TextMatch,\n  OperatorType.TextNotMatch,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.In,\n  OperatorType.NotIn\n];\n\nconst DATE_OPERATORS = [\n  OperatorType.DateEqual,\n  OperatorType.DateAfter,\n  OperatorType.DateBefore,\n  OperatorType.DateNotEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst NUMERIC_OPERATORS = [\n  OperatorType.Equal,\n  OperatorType.NotEqual,\n  OperatorType.GreaterThan,\n  OperatorType.GreaterThanOrEqual,\n  OperatorType.LessThan,\n  OperatorType.LessThanOrEqual,\n  OperatorType.Between,\n  OperatorType.NotBetween,\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst ARRAY_OPERATORS = [\n  OperatorType.ArrayAnyOf,\n  OperatorType.ArrayAllOf,\n  OperatorType.ArrayEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst GEOSPATIAL_OPERATORS = [\n];\n\nconst SYSTEM_COLUMNS = {\n  _record_id: TEXTUAL_OPERATORS,\n  _project_id: TEXTUAL_OPERATORS,\n  _assigned_to_id: TEXTUAL_OPERATORS,\n  _status: TEXTUAL_OPERATORS,\n  _latitude: NUMERIC_OPERATORS,\n  _longitude: NUMERIC_OPERATORS,\n  _created_at: DATE_OPERATORS,\n  _updated_at: DATE_OPERATORS,\n  _version: NUMERIC_OPERATORS,\n  _created_by_id: TEXTUAL_OPERATORS,\n  _updated_by_id: TEXTUAL_OPERATORS,\n  _server_created_at: DATE_OPERATORS,\n  _server_updated_at: DATE_OPERATORS,\n  _geometry: GEOSPATIAL_OPERATORS,\n  _altitude: NUMERIC_OPERATORS,\n  _speed: NUMERIC_OPERATORS,\n  _course: NUMERIC_OPERATORS,\n  _horizontal_accuracy: NUMERIC_OPERATORS,\n  _vertical_accuracy: NUMERIC_OPERATORS,\n  _changeset_id: TEXTUAL_OPERATORS,\n  _title: TEXTUAL_OPERATORS,\n  _created_latitude: NUMERIC_OPERATORS,\n  _created_longitude: NUMERIC_OPERATORS,\n  _created_geometry: GEOSPATIAL_OPERATORS,\n  _created_altitude: NUMERIC_OPERATORS,\n  _created_horizontal_accuracy: NUMERIC_OPERATORS,\n  _updated_latitude: NUMERIC_OPERATORS,\n  _updated_longitude: NUMERIC_OPERATORS,\n  _updated_geometry: GEOSPATIAL_OPERATORS,\n  _updated_altitude: NUMERIC_OPERATORS,\n  _updated_horizontal_accuracy: NUMERIC_OPERATORS,\n  _created_duration: NUMERIC_OPERATORS,\n  _updated_duration: NUMERIC_OPERATORS,\n  _edited_duration: NUMERIC_OPERATORS\n};\n\nexport function isValueRequired(operator) {\n  return operator !== OperatorType.Empty.name && operator !== OperatorType.NotEmpty.name;\n}\n\nexport function availableOperatorsForColumn(column) {\n  const operators = [];\n\n  if (column == null) {\n    return operators;\n  }\n\n  if (SYSTEM_COLUMNS[column.id]) {\n    return SYSTEM_COLUMNS[column.id];\n  }\n\n  const element = column && column.element;\n\n  if (element) {\n    if (element.isTextElement) {\n      if (element.isNumeric) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isCalculatedElement) {\n      if (element.display.isNumber || element.display.isCurrency) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else if (element.display.isDate) {\n        operators.push.apply(operators, DATE_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isDateElement) {\n      operators.push.apply(operators, DATE_OPERATORS);\n    }\n\n    if (element.isChoiceElement) {\n      if (element.multiple) {\n        operators.push.apply(operators, ARRAY_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isClassificationElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n\n    if (element.isStatusElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n  }\n\n  return operators;\n}\n"]}