{"version":3,"sources":["../src/operator.js"],"names":["isValueRequired","availableOperatorsForColumn","calculateDateRange","OperatorType","Empty","name","label","NotEmpty","Equal","NotEqual","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","Between","NotBetween","In","NotIn","TextContain","TextNotContain","TextStartsWith","TextEndsWith","TextEqual","TextNotEqual","TextMatch","TextNotMatch","DateEqual","DateNotEqual","DateAfter","DateOnOrAfter","DateBefore","DateOnOrBefore","DateToday","DateYesterday","DateTomorrow","DateLastWeek","DateLastMonth","DateLastYear","DateNextWeek","DateNextMonth","DateNextYear","DateCurrentCalendarWeek","DateCurrentCalendarMonth","DateCurrentCalendarYear","DatePreviousCalendarWeek","DatePreviousCalendarMonth","DatePreviousCalendarYear","DateNextCalendarWeek","DateNextCalendarMonth","DateNextCalendarYear","DateDaysFromNow","DateDaysAgo","DateBetween","DateNotBetween","ArrayAnyOf","ArrayAllOf","ArrayNoneOf","ArrayEqual","Search","TEXTUAL_OPERATORS","DATE_OPERATORS","DYNAMIC_DATE_OPERATORS","FRIENDLY_DATE_OPERATORS","NUMERIC_OPERATORS","ARRAY_OPERATORS","GEOSPATIAL_OPERATORS","MEDIA_OPERATORS","NO_VALUE_OPERATORS","SYSTEM_COLUMNS","_record_id","_project_id","_assigned_to_id","_status","_latitude","_longitude","_created_at","_updated_at","_version","_created_by_id","_updated_by_id","_server_created_at","_server_updated_at","_geometry","_altitude","_speed","_course","_horizontal_accuracy","_vertical_accuracy","_changeset_id","_title","_created_latitude","_created_longitude","_created_geometry","_created_altitude","_created_horizontal_accuracy","_updated_latitude","_updated_longitude","_updated_geometry","_updated_altitude","_updated_horizontal_accuracy","_created_duration","_updated_duration","_edited_duration","operator","find","o","column","operators","id","element","isTextElement","isNumeric","push","apply","isCalculatedElement","display","isNumber","isCurrency","isDate","isDateElement","isChoiceElement","multiple","isClassificationElement","isStatusElement","isPhotoElement","isVideoElement","isAudioElement","isSignatureElement","value","now","Date","clone","startOf","date1","date2","range","start","end","endOf","subtract","add"],"mappings":";;;;QA4bgBA,e,GAAAA,e;QAIAC,2B,GAAAA,2B;QA+DAC,kB,GAAAA,kB;;AA/fhB;;;;;;AAEO,IAAMC,sCAAe;AAC1BC,SAAO;AACLC,UAAM,UADD;AAELC,WAAO;AAFF,GADmB;;AAM1BC,YAAU;AACRF,UAAM,cADE;AAERC,WAAO;AAFC,GANgB;;AAW1BE,SAAO;AACLH,UAAM,OADD;AAELC,WAAO;AAFF,GAXmB;;AAgB1BG,YAAU;AACRJ,UAAM,WADE;AAERC,WAAO;AAFC,GAhBgB;;AAqB1BI,eAAa;AACXL,UAAM,cADK;AAEXC,WAAO;AAFI,GArBa;;AA0B1BK,sBAAoB;AAClBN,UAAM,uBADY;AAElBC,WAAO;AAFW,GA1BM;;AA+B1BM,YAAU;AACRP,UAAM,WADE;AAERC,WAAO;AAFC,GA/BgB;;AAoC1BO,mBAAiB;AACfR,UAAM,oBADS;AAEfC,WAAO;AAFQ,GApCS;;AAyC1BQ,WAAS;AACPT,UAAM,SADC;AAEPC,WAAO;AAFA,GAzCiB;;AA8C1BS,cAAY;AACVV,UAAM,aADI;AAEVC,WAAO;AAFG,GA9Cc;;AAmD1BU,MAAI;AACFX,UAAM,IADJ;AAEFC,WAAO;AAFL,GAnDsB;;AAwD1BW,SAAO;AACLZ,UAAM,QADD;AAELC,WAAO;AAFF,GAxDmB;;AA6D1BY,eAAa;AACXb,UAAM,cADK;AAEXC,WAAO;AAFI,GA7Da;;AAkE1Ba,kBAAgB;AACdd,UAAM,kBADQ;AAEdC,WAAO;AAFO,GAlEU;;AAuE1Bc,kBAAgB;AACdf,UAAM,kBADQ;AAEdC,WAAO;AAFO,GAvEU;;AA4E1Be,gBAAc;AACZhB,UAAM,gBADM;AAEZC,WAAO;AAFK,GA5EY;;AAiF1BgB,aAAW;AACTjB,UAAM,YADG;AAETC,WAAO;AAFE,GAjFe;;AAsF1BiB,gBAAc;AACZlB,UAAM,gBADM;AAEZC,WAAO;AAFK,GAtFY;;AA2F1BkB,aAAW;AACTnB,UAAM,YADG;AAETC,WAAO;AAFE,GA3Fe;;AAgG1BmB,gBAAc;AACZpB,UAAM,gBADM;AAEZC,WAAO;AAFK,GAhGY;;AAqG1BoB,aAAW;AACTrB,UAAM,YADG;AAETC,WAAO;AAFE,GArGe;;AA0G1BqB,gBAAc;AACZtB,UAAM,gBADM;AAEZC,WAAO;AAFK,GA1GY;;AA+G1BsB,aAAW;AACTvB,UAAM,YADG;AAETC,WAAO;AAFE,GA/Ge;;AAoH1BuB,iBAAe;AACbxB,UAAM,kBADO;AAEbC,WAAO;AAFM,GApHW;;AAyH1BwB,cAAY;AACVzB,UAAM,aADI;AAEVC,WAAO;AAFG,GAzHc;;AA8H1ByB,kBAAgB;AACd1B,UAAM,mBADQ;AAEdC,WAAO;AAFO,GA9HU;;AAmI1B0B,aAAW;AACT3B,UAAM,YADG;AAETC,WAAO;AAFE,GAnIe;;AAwI1B2B,iBAAe;AACb5B,UAAM,gBADO;AAEbC,WAAO;AAFM,GAxIW;;AA6I1B4B,gBAAc;AACZ7B,UAAM,eADM;AAEZC,WAAO;AAFK,GA7IY;;AAkJ1B6B,gBAAc;AACZ9B,UAAM,gBADM;AAEZC,WAAO;AAFK,GAlJY;;AAuJ1B8B,iBAAe;AACb/B,UAAM,iBADO;AAEbC,WAAO;AAFM,GAvJW;;AA4J1B+B,gBAAc;AACZhC,UAAM,gBADM;AAEZC,WAAO;AAFK,GA5JY;;AAiK1BgC,gBAAc;AACZjC,UAAM,gBADM;AAEZC,WAAO;AAFK,GAjKY;;AAsK1BiC,iBAAe;AACblC,UAAM,iBADO;AAEbC,WAAO;AAFM,GAtKW;;AA2K1BkC,gBAAc;AACZnC,UAAM,gBADM;AAEZC,WAAO;AAFK,GA3KY;;AAgL1BmC,2BAAyB;AACvBpC,UAAM,4BADiB;AAEvBC,WAAO;AAFgB,GAhLC;;AAqL1BoC,4BAA0B;AACxBrC,UAAM,6BADkB;AAExBC,WAAO;AAFiB,GArLA;;AA0L1BqC,2BAAyB;AACvBtC,UAAM,4BADiB;AAEvBC,WAAO;AAFgB,GA1LC;;AA+L1BsC,4BAA0B;AACxBvC,UAAM,6BADkB;AAExBC,WAAO;AAFiB,GA/LA;;AAoM1BuC,6BAA2B;AACzBxC,UAAM,8BADmB;AAEzBC,WAAO;AAFkB,GApMD;;AAyM1BwC,4BAA0B;AACxBzC,UAAM,6BADkB;AAExBC,WAAO;AAFiB,GAzMA;;AA8M1ByC,wBAAsB;AACpB1C,UAAM,yBADc;AAEpBC,WAAO;AAFa,GA9MI;;AAmN1B0C,yBAAuB;AACrB3C,UAAM,0BADe;AAErBC,WAAO;AAFc,GAnNG;;AAwN1B2C,wBAAsB;AACpB5C,UAAM,yBADc;AAEpBC,WAAO;AAFa,GAxNI;;AA6N1B4C,mBAAiB;AACf7C,UAAM,oBADS;AAEfC,WAAO;AAFQ,GA7NS;;AAkO1B6C,eAAa;AACX9C,UAAM,eADK;AAEXC,WAAO;AAFI,GAlOa;;AAuO1B8C,eAAa;AACX/C,UAAM,cADK;AAEXC,WAAO;AAFI,GAvOa;;AA4O1B+C,kBAAgB;AACdhD,UAAM,kBADQ;AAEdC,WAAO;AAFO,GA5OU;;AAiP1BgD,cAAY;AACVjD,UAAM,cADI;AAEVC,WAAO;AAFG,GAjPc;;AAsP1BiD,cAAY;AACVlD,UAAM,cADI;AAEVC,WAAO;AAFG,GAtPc;;AA2P1BkD,eAAa;AACXnD,UAAM,eADK;AAEXC,WAAO;AAFI,GA3Pa;;AAgQ1BmD,cAAY;AACVpD,UAAM,aADI;AAEVC,WAAO;AAFG,GAhQc;;AAqQ1BoD,UAAQ;AACNrD,UAAM,QADA;AAENC,WAAO;AAFD;AArQkB,CAArB;;AA2QP,IAAMqD,oBAAoB,CACxBxD,aAAaa,EADW,EAExBb,aAAac,KAFW,EAGxBd,aAAaC,KAHW,EAIxBD,aAAaI,QAJW,EAKxBJ,aAAae,WALW,EAMxBf,aAAagB,cANW,EAOxBhB,aAAaiB,cAPW,EAQxBjB,aAAakB,YARW,EASxBlB,aAAamB,SATW,EAUxBnB,aAAaoB,YAVW,EAWxBpB,aAAaqB,SAXW,EAYxBrB,aAAasB,YAZW,CAA1B;;AAeA,IAAMmC,iBAAiB,CACrBzD,aAAauB,SADQ,EAErBvB,aAAa0B,aAFQ,EAGrB1B,aAAayB,SAHQ,EAIrBzB,aAAa4B,cAJQ,EAKrB5B,aAAa2B,UALQ,EAMrB3B,aAAaiD,WANQ,EAOrBjD,aAAakD,cAPQ,EAQrBlD,aAAawB,YARQ,EASrBxB,aAAaC,KATQ,EAUrBD,aAAaI,QAVQ,EAWrBJ,aAAaa,EAXQ,EAYrBb,aAAac,KAZQ,EAarBd,aAAa6B,SAbQ,EAcrB7B,aAAa8B,aAdQ,EAerB9B,aAAa+B,YAfQ,EAgBrB/B,aAAagC,YAhBQ,EAiBrBhC,aAAaiC,aAjBQ,EAkBrBjC,aAAakC,YAlBQ,EAmBrBlC,aAAamC,YAnBQ,EAoBrBnC,aAAaoC,aApBQ,EAqBrBpC,aAAaqC,YArBQ,EAsBrBrC,aAAasC,uBAtBQ,EAuBrBtC,aAAauC,wBAvBQ,EAwBrBvC,aAAawC,uBAxBQ,EAyBrBxC,aAAayC,wBAzBQ,EA0BrBzC,aAAa0C,yBA1BQ,EA2BrB1C,aAAa2C,wBA3BQ,EA4BrB3C,aAAa4C,oBA5BQ,EA6BrB5C,aAAa6C,qBA7BQ,EA8BrB7C,aAAa8C,oBA9BQ,EA+BrB9C,aAAa+C,eA/BQ,EAgCrB/C,aAAagD,WAhCQ,CAAvB;;AAmCO,IAAMU,0DAAyB,CACpC1D,aAAa6B,SADuB,EAEpC7B,aAAa8B,aAFuB,EAGpC9B,aAAa+B,YAHuB,EAIpC/B,aAAagC,YAJuB,EAKpChC,aAAaiC,aALuB,EAMpCjC,aAAakC,YANuB,EAOpClC,aAAamC,YAPuB,EAQpCnC,aAAaoC,aARuB,EASpCpC,aAAaqC,YATuB,EAUpCrC,aAAasC,uBAVuB,EAWpCtC,aAAauC,wBAXuB,EAYpCvC,aAAawC,uBAZuB,EAapCxC,aAAayC,wBAbuB,EAcpCzC,aAAa0C,yBAduB,EAepC1C,aAAa2C,wBAfuB,EAgBpC3C,aAAa4C,oBAhBuB,EAiBpC5C,aAAa6C,qBAjBuB,EAkBpC7C,aAAa8C,oBAlBuB,EAmBpC9C,aAAa+C,eAnBuB,EAoBpC/C,aAAagD,WApBuB,CAA/B;;AAuBA,IAAMW,4DAA0B,CACrC3D,aAAa6B,SADwB,EAErC7B,aAAa8B,aAFwB,EAGrC9B,aAAa+B,YAHwB,EAIrC/B,aAAagC,YAJwB,EAKrChC,aAAaiC,aALwB,EAMrCjC,aAAauC,wBANwB,EAOrCvC,aAAa0C,yBAPwB,EAQrC1C,aAAaiD,WARwB,CAAhC;;AAWP,IAAMW,oBAAoB,CACxB5D,aAAaK,KADW,EAExBL,aAAaM,QAFW,EAGxBN,aAAaO,WAHW,EAIxBP,aAAaQ,kBAJW,EAKxBR,aAAaS,QALW,EAMxBT,aAAaU,eANW,EAOxBV,aAAaW,OAPW,EAQxBX,aAAaY,UARW,EASxBZ,aAAaC,KATW,EAUxBD,aAAaI,QAVW,EAWxBJ,aAAaa,EAXW,EAYxBb,aAAac,KAZW,CAA1B;;AAeA,IAAM+C,kBAAkB,CACtB7D,aAAamD,UADS,EAEtBnD,aAAaoD,UAFS,EAGtBpD,aAAasD,UAHS,EAItBtD,aAAaC,KAJS,EAKtBD,aAAaI,QALS,CAAxB;;AAQA,IAAM0D,uBAAuB,EAA7B;;AAGA,IAAMC,kBAAkB,CACtB/D,aAAaC,KADS,EAEtBD,aAAaI,QAFS,CAAxB;;AAKA,IAAM4D,qBAAqB,CACzBhE,aAAaC,KADY,EAEzBD,aAAaI,QAFY,EAGzBJ,aAAa6B,SAHY,EAIzB7B,aAAa8B,aAJY,EAKzB9B,aAAa+B,YALY,EAMzB/B,aAAagC,YANY,EAOzBhC,aAAaiC,aAPY,EAQzBjC,aAAakC,YARY,EASzBlC,aAAamC,YATY,EAUzBnC,aAAaoC,aAVY,EAWzBpC,aAAaqC,YAXY,EAYzBrC,aAAasC,uBAZY,EAazBtC,aAAauC,wBAbY,EAczBvC,aAAawC,uBAdY,EAezBxC,aAAayC,wBAfY,EAgBzBzC,aAAa0C,yBAhBY,EAiBzB1C,aAAa2C,wBAjBY,EAkBzB3C,aAAa4C,oBAlBY,EAmBzB5C,aAAa6C,qBAnBY,EAoBzB7C,aAAa8C,oBApBY,CAA3B;;AAuBA,IAAMmB,iBAAiB;AACrBC,cAAYV,iBADS;AAErBW,eAAaX,iBAFQ;AAGrBY,mBAAiBZ,iBAHI;AAIrBa,WAASb,iBAJY;AAKrBc,aAAWV,iBALU;AAMrBW,cAAYX,iBANS;AAOrBY,eAAaf,cAPQ;AAQrBgB,eAAahB,cARQ;AASrBiB,YAAUd,iBATW;AAUrBe,kBAAgBnB,iBAVK;AAWrBoB,kBAAgBpB,iBAXK;AAYrBqB,sBAAoBpB,cAZC;AAarBqB,sBAAoBrB,cAbC;AAcrBsB,aAAWjB,oBAdU;AAerBkB,aAAWpB,iBAfU;AAgBrBqB,UAAQrB,iBAhBa;AAiBrBsB,WAAStB,iBAjBY;AAkBrBuB,wBAAsBvB,iBAlBD;AAmBrBwB,sBAAoBxB,iBAnBC;AAoBrByB,iBAAe7B,iBApBM;AAqBrB8B,UAAQ9B,iBArBa;AAsBrB+B,qBAAmB3B,iBAtBE;AAuBrB4B,sBAAoB5B,iBAvBC;AAwBrB6B,qBAAmB3B,oBAxBE;AAyBrB4B,qBAAmB9B,iBAzBE;AA0BrB+B,gCAA8B/B,iBA1BT;AA2BrBgC,qBAAmBhC,iBA3BE;AA4BrBiC,sBAAoBjC,iBA5BC;AA6BrBkC,qBAAmBhC,oBA7BE;AA8BrBiC,qBAAmBnC,iBA9BE;AA+BrBoC,gCAA8BpC,iBA/BT;AAgCrBqC,qBAAmBrC,iBAhCE;AAiCrBsC,qBAAmBtC,iBAjCE;AAkCrBuC,oBAAkBvC;AAlCG,CAAvB;;AAqCO,SAAS/D,eAAT,CAAyBuG,QAAzB,EAAmC;AACxC,SAAO,CAACpC,mBAAmBqC,IAAnB,CAAwB;AAAA,WAAKC,EAAEpG,IAAF,KAAWkG,QAAhB;AAAA,GAAxB,CAAR;AACD;;AAEM,SAAStG,2BAAT,CAAqCyG,MAArC,EAA6C;AAClD,MAAMC,YAAY,EAAlB;;AAEA,MAAID,UAAU,IAAd,EAAoB;AAClB,WAAOC,SAAP;AACD;;AAED,MAAIvC,eAAesC,OAAOE,EAAtB,CAAJ,EAA+B;AAC7B,WAAOxC,eAAesC,OAAOE,EAAtB,CAAP;AACD;;AAED,MAAMC,UAAUH,UAAUA,OAAOG,OAAjC;;AAEA,MAAIA,OAAJ,EAAa;AACX,QAAIA,QAAQC,aAAZ,EAA2B;AACzB,UAAID,QAAQE,SAAZ,EAAuB;AACrBJ,kBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgC5C,iBAAhC;AACD,OAFD,MAEO;AACL4C,kBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgChD,iBAAhC;AACD;AACF;;AAED,QAAIkD,QAAQK,mBAAZ,EAAiC;AAC/B,UAAIL,QAAQM,OAAR,CAAgBC,QAAhB,IAA4BP,QAAQM,OAAR,CAAgBE,UAAhD,EAA4D;AAC1DV,kBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgC5C,iBAAhC;AACD,OAFD,MAEO,IAAI8C,QAAQM,OAAR,CAAgBG,MAApB,EAA4B;AACjCX,kBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgC/C,cAAhC;AACD,OAFM,MAEA;AACL+C,kBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgChD,iBAAhC;AACD;AACF;;AAED,QAAIkD,QAAQU,aAAZ,EAA2B;AACzBZ,gBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgC/C,cAAhC;AACD;;AAED,QAAIiD,QAAQW,eAAZ,EAA6B;AAC3B,UAAIX,QAAQY,QAAZ,EAAsB;AACpBd,kBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgC3C,eAAhC;AACD,OAFD,MAEO;AACL2C,kBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgChD,iBAAhC;AACD;AACF;;AAED,QAAIkD,QAAQa,uBAAZ,EAAqC;AACnCf,gBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgChD,iBAAhC;AACD;;AAED,QAAIkD,QAAQc,eAAZ,EAA6B;AAC3BhB,gBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgChD,iBAAhC;AACD;;AAED,QAAIkD,QAAQe,cAAR,IACEf,QAAQgB,cADV,IAEEhB,QAAQiB,cAFV,IAGEjB,QAAQkB,kBAHd,EAGkC;AAChCpB,gBAAUK,IAAV,CAAeC,KAAf,CAAqBN,SAArB,EAAgCzC,eAAhC;AACD;AACF;;AAED,SAAOyC,SAAP;AACD;;AAEM,SAASzG,kBAAT,CAA4BqG,QAA5B,EAAsCyB,KAAtC,EAA6CC,GAA7C,EAAkD;AACvDA,QAAM,sBAAOA,OAAO,IAAIC,IAAJ,EAAd,EAA0BC,KAA1B,GAAkCC,OAAlC,CAA0C,KAA1C,CAAN;;AAEA,MAAMC,QAAQJ,IAAIE,KAAJ,EAAd;AACA,MAAMG,QAAQL,IAAIE,KAAJ,EAAd;;AAEA,MAAMI,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5B,WAAO,CAAED,MAAML,KAAN,EAAF,EAAiB,CAACM,OAAOD,KAAR,EAAeL,KAAf,GAAuBO,KAAvB,CAA6B,KAA7B,CAAjB,CAAP;AACD,GAFD;;AAIA,UAAQnC,QAAR;AACE,SAAKpG,aAAa6B,SAAb,CAAuB3B,IAA5B;AACE,aAAOkI,MAAMF,KAAN,CAAP;;AAEF,SAAKlI,aAAa8B,aAAb,CAA2B5B,IAAhC;AACE,aAAOkI,MAAMF,MAAMM,QAAN,CAAe,CAAf,EAAkB,MAAlB,CAAN,CAAP;;AAEF,SAAKxI,aAAa+B,YAAb,CAA0B7B,IAA/B;AACE,aAAOkI,MAAMF,MAAMO,GAAN,CAAU,CAAV,EAAa,MAAb,CAAN,CAAP;;AAEF,SAAKzI,aAAagC,YAAb,CAA0B9B,IAA/B;AACE,aAAOkI,MAAMF,MAAMM,QAAN,CAAe,CAAf,EAAkB,MAAlB,CAAN,EAAiCL,KAAjC,CAAP;;AAEF,SAAKnI,aAAaiC,aAAb,CAA2B/B,IAAhC;AACE,aAAOkI,MAAMF,MAAMM,QAAN,CAAe,CAAf,EAAkB,OAAlB,CAAN,EAAkCL,KAAlC,CAAP;;AAEF,SAAKnI,aAAakC,YAAb,CAA0BhC,IAA/B;AACE,aAAOkI,MAAMF,MAAMM,QAAN,CAAe,CAAf,EAAkB,MAAlB,CAAN,EAAiCL,KAAjC,CAAP;;AAEF,SAAKnI,aAAamC,YAAb,CAA0BjC,IAA/B;AACE,aAAOkI,MAAMF,KAAN,EAAaC,MAAMM,GAAN,CAAU,CAAV,EAAa,MAAb,CAAb,CAAP;;AAEF,SAAKzI,aAAaoC,aAAb,CAA2BlC,IAAhC;AACE,aAAOkI,MAAMF,KAAN,EAAaC,MAAMM,GAAN,CAAU,CAAV,EAAa,OAAb,CAAb,CAAP;;AAEF,SAAKzI,aAAaqC,YAAb,CAA0BnC,IAA/B;AACE,aAAOkI,MAAMF,KAAN,EAAaC,MAAMM,GAAN,CAAU,CAAV,EAAa,MAAb,CAAb,CAAP;;AAEF,SAAKzI,aAAasC,uBAAb,CAAqCpC,IAA1C;AACE,aAAOkI,MAAMF,MAAMD,OAAN,CAAc,MAAd,CAAN,EAA6BE,MAAMI,KAAN,CAAY,MAAZ,CAA7B,CAAP;;AAEF,SAAKvI,aAAayC,wBAAb,CAAsCvC,IAA3C;AACE,aAAOkI,MAAMF,MAAMM,QAAN,CAAe,CAAf,EAAkB,MAAlB,EAA0BP,OAA1B,CAAkC,MAAlC,CAAN,EACME,MAAMK,QAAN,CAAe,CAAf,EAAkB,MAAlB,EAA0BD,KAA1B,CAAgC,MAAhC,CADN,CAAP;;AAGF,SAAKvI,aAAa4C,oBAAb,CAAkC1C,IAAvC;AACE,aAAOkI,MAAMF,MAAMO,GAAN,CAAU,CAAV,EAAa,MAAb,EAAqBR,OAArB,CAA6B,MAA7B,CAAN,EACME,MAAMM,GAAN,CAAU,CAAV,EAAa,MAAb,EAAqBF,KAArB,CAA2B,MAA3B,CADN,CAAP;;AAGF,SAAKvI,aAAauC,wBAAb,CAAsCrC,IAA3C;AACE,aAAOkI,MAAMF,MAAMD,OAAN,CAAc,OAAd,CAAN,EAA8BE,MAAMI,KAAN,CAAY,OAAZ,CAA9B,CAAP;;AAEF,SAAKvI,aAAa0C,yBAAb,CAAuCxC,IAA5C;AACE,aAAOkI,MAAMF,MAAMM,QAAN,CAAe,CAAf,EAAkB,OAAlB,EAA2BP,OAA3B,CAAmC,OAAnC,CAAN,EACME,MAAMK,QAAN,CAAe,CAAf,EAAkB,OAAlB,EAA2BD,KAA3B,CAAiC,OAAjC,CADN,CAAP;;AAGF,SAAKvI,aAAa6C,qBAAb,CAAmC3C,IAAxC;AACE,aAAOkI,MAAMF,MAAMO,GAAN,CAAU,CAAV,EAAa,OAAb,EAAsBR,OAAtB,CAA8B,OAA9B,CAAN,EACME,MAAMM,GAAN,CAAU,CAAV,EAAa,OAAb,EAAsBF,KAAtB,CAA4B,OAA5B,CADN,CAAP;;AAGF,SAAKvI,aAAawC,uBAAb,CAAqCtC,IAA1C;AACE,aAAOkI,MAAMF,MAAMD,OAAN,CAAc,MAAd,CAAN,EAA6BE,MAAMI,KAAN,CAAY,MAAZ,CAA7B,CAAP;;AAEF,SAAKvI,aAAa2C,wBAAb,CAAsCzC,IAA3C;AACE,aAAOkI,MAAMF,MAAMM,QAAN,CAAe,CAAf,EAAkB,MAAlB,EAA0BP,OAA1B,CAAkC,MAAlC,CAAN,EACME,MAAMK,QAAN,CAAe,CAAf,EAAkB,MAAlB,EAA0BD,KAA1B,CAAgC,MAAhC,CADN,CAAP;;AAGF,SAAKvI,aAAa8C,oBAAb,CAAkC5C,IAAvC;AACE,aAAOkI,MAAMF,MAAMO,GAAN,CAAU,CAAV,EAAa,MAAb,EAAqBR,OAArB,CAA6B,MAA7B,CAAN,EACME,MAAMM,GAAN,CAAU,CAAV,EAAa,MAAb,EAAqBF,KAArB,CAA2B,MAA3B,CADN,CAAP;;AAGF,SAAKvI,aAAa+C,eAAb,CAA6B7C,IAAlC;AACE,aAAO2H,SAASO,MAAMF,KAAN,EAAaC,MAAMM,GAAN,CAAU,CAACZ,KAAX,EAAkB,MAAlB,CAAb,CAAhB;;AAEF,SAAK7H,aAAagD,WAAb,CAAyB9C,IAA9B;AACE,aAAO2H,SAASO,MAAMF,MAAMM,QAAN,CAAe,CAACX,KAAhB,EAAuB,MAAvB,CAAN,EAAsCM,KAAtC,CAAhB;;AAEF,SAAKnI,aAAaiD,WAAb,CAAyB/C,IAA9B;AACE,aAAO2H,SAASO,MAAMP,MAAM,CAAN,KAAY,sBAAOA,MAAM,CAAN,CAAP,CAAlB,EAAoCA,MAAM,CAAN,KAAY,sBAAOA,MAAM,CAAN,CAAP,CAAhD,CAAhB;;AAEF;AACE,aAAO,IAAP;AAvEJ;AAyED","file":"operator.js","sourcesContent":["import moment from 'moment';\n\nexport const OperatorType = {\n  Empty: {\n    name: 'is_empty',\n    label: 'Is blank'\n  },\n\n  NotEmpty: {\n    name: 'is_not_empty',\n    label: 'Is not blank'\n  },\n\n  Equal: {\n    name: 'equal',\n    label: 'Equals'\n  },\n\n  NotEqual: {\n    name: 'not_equal',\n    label: 'Does not equal'\n  },\n\n  GreaterThan: {\n    name: 'greater_than',\n    label: 'Greater than'\n  },\n\n  GreaterThanOrEqual: {\n    name: 'greater_than_or_equal',\n    label: 'Greater than or equal to'\n  },\n\n  LessThan: {\n    name: 'less_than',\n    label: 'Less than'\n  },\n\n  LessThanOrEqual: {\n    name: 'less_than_or_equal',\n    label: 'Less than or equal to'\n  },\n\n  Between: {\n    name: 'between',\n    label: 'Between'\n  },\n\n  NotBetween: {\n    name: 'not_between',\n    label: 'Not between'\n  },\n\n  In: {\n    name: 'in',\n    label: 'One of'\n  },\n\n  NotIn: {\n    name: 'not_in',\n    label: 'Not one of'\n  },\n\n  TextContain: {\n    name: 'text_contain',\n    label: 'Contains'\n  },\n\n  TextNotContain: {\n    name: 'text_not_contain',\n    label: 'Does not contain'\n  },\n\n  TextStartsWith: {\n    name: 'text_starts_with',\n    label: 'Starts with'\n  },\n\n  TextEndsWith: {\n    name: 'text_ends_with',\n    label: 'Ends with'\n  },\n\n  TextEqual: {\n    name: 'text_equal',\n    label: 'Equals'\n  },\n\n  TextNotEqual: {\n    name: 'text_not_equal',\n    label: 'Does not equal'\n  },\n\n  TextMatch: {\n    name: 'text_match',\n    label: 'Matches regex'\n  },\n\n  TextNotMatch: {\n    name: 'text_not_match',\n    label: 'Does not match regex'\n  },\n\n  DateEqual: {\n    name: 'date_equal',\n    label: 'Equals'\n  },\n\n  DateNotEqual: {\n    name: 'date_not_equal',\n    label: 'Does not equal'\n  },\n\n  DateAfter: {\n    name: 'date_after',\n    label: 'After'\n  },\n\n  DateOnOrAfter: {\n    name: 'date_on_or_after',\n    label: 'On or After'\n  },\n\n  DateBefore: {\n    name: 'date_before',\n    label: 'Before'\n  },\n\n  DateOnOrBefore: {\n    name: 'date_on_or_before',\n    label: 'On or Before'\n  },\n\n  DateToday: {\n    name: 'date_today',\n    label: 'Today'\n  },\n\n  DateYesterday: {\n    name: 'date_yesterday',\n    label: 'Yesterday'\n  },\n\n  DateTomorrow: {\n    name: 'date_tomorrow',\n    label: 'Tomorrow'\n  },\n\n  DateLastWeek: {\n    name: 'date_last_week',\n    label: '1 Week Ago'\n  },\n\n  DateLastMonth: {\n    name: 'date_last_month',\n    label: '1 Month Ago'\n  },\n\n  DateLastYear: {\n    name: 'date_last_year',\n    label: '1 Year Ago'\n  },\n\n  DateNextWeek: {\n    name: 'date_next_week',\n    label: '1 Week from Now'\n  },\n\n  DateNextMonth: {\n    name: 'date_next_month',\n    label: '1 Month from Now'\n  },\n\n  DateNextYear: {\n    name: 'date_next_year',\n    label: '1 Year from Now'\n  },\n\n  DateCurrentCalendarWeek: {\n    name: 'date_current_calendar_week',\n    label: 'This Week'\n  },\n\n  DateCurrentCalendarMonth: {\n    name: 'date_current_calendar_month',\n    label: 'This Month'\n  },\n\n  DateCurrentCalendarYear: {\n    name: 'date_current_calendar_year',\n    label: 'This Year'\n  },\n\n  DatePreviousCalendarWeek: {\n    name: 'date_previous_calendar_week',\n    label: 'Last Week'\n  },\n\n  DatePreviousCalendarMonth: {\n    name: 'date_previous_calendar_month',\n    label: 'Last Month'\n  },\n\n  DatePreviousCalendarYear: {\n    name: 'date_previous_calendar_year',\n    label: 'Last Year'\n  },\n\n  DateNextCalendarWeek: {\n    name: 'date_next_calendar_week',\n    label: 'Next Week'\n  },\n\n  DateNextCalendarMonth: {\n    name: 'date_next_calendar_month',\n    label: 'Next Month'\n  },\n\n  DateNextCalendarYear: {\n    name: 'date_next_calendar_year',\n    label: 'Next Year'\n  },\n\n  DateDaysFromNow: {\n    name: 'date_days_from_now',\n    label: 'Days from Now'\n  },\n\n  DateDaysAgo: {\n    name: 'date_days_ago',\n    label: 'Days ago'\n  },\n\n  DateBetween: {\n    name: 'date_between',\n    label: 'Specific Range'\n  },\n\n  DateNotBetween: {\n    name: 'date_not_between',\n    label: 'Not Between'\n  },\n\n  ArrayAnyOf: {\n    name: 'array_any_of',\n    label: 'Any of'\n  },\n\n  ArrayAllOf: {\n    name: 'array_all_of',\n    label: 'All of'\n  },\n\n  ArrayNoneOf: {\n    name: 'array_none_of',\n    label: 'None of'\n  },\n\n  ArrayEqual: {\n    name: 'array_equal',\n    label: 'Equals'\n  },\n\n  Search: {\n    name: 'search',\n    label: 'Search'\n  }\n};\n\nconst TEXTUAL_OPERATORS = [\n  OperatorType.In,\n  OperatorType.NotIn,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.TextContain,\n  OperatorType.TextNotContain,\n  OperatorType.TextStartsWith,\n  OperatorType.TextEndsWith,\n  OperatorType.TextEqual,\n  OperatorType.TextNotEqual,\n  OperatorType.TextMatch,\n  OperatorType.TextNotMatch\n];\n\nconst DATE_OPERATORS = [\n  OperatorType.DateEqual,\n  OperatorType.DateOnOrAfter,\n  OperatorType.DateAfter,\n  OperatorType.DateOnOrBefore,\n  OperatorType.DateBefore,\n  OperatorType.DateBetween,\n  OperatorType.DateNotBetween,\n  OperatorType.DateNotEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.In,\n  OperatorType.NotIn,\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLastWeek,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear,\n  OperatorType.DateDaysFromNow,\n  OperatorType.DateDaysAgo\n];\n\nexport const DYNAMIC_DATE_OPERATORS = [\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLastWeek,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear,\n  OperatorType.DateDaysFromNow,\n  OperatorType.DateDaysAgo\n];\n\nexport const FRIENDLY_DATE_OPERATORS = [\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLastWeek,\n  OperatorType.DateLastMonth,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DateBetween\n];\n\nconst NUMERIC_OPERATORS = [\n  OperatorType.Equal,\n  OperatorType.NotEqual,\n  OperatorType.GreaterThan,\n  OperatorType.GreaterThanOrEqual,\n  OperatorType.LessThan,\n  OperatorType.LessThanOrEqual,\n  OperatorType.Between,\n  OperatorType.NotBetween,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.In,\n  OperatorType.NotIn\n];\n\nconst ARRAY_OPERATORS = [\n  OperatorType.ArrayAnyOf,\n  OperatorType.ArrayAllOf,\n  OperatorType.ArrayEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst GEOSPATIAL_OPERATORS = [\n];\n\nconst MEDIA_OPERATORS = [\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst NO_VALUE_OPERATORS = [\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLastWeek,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear\n];\n\nconst SYSTEM_COLUMNS = {\n  _record_id: TEXTUAL_OPERATORS,\n  _project_id: TEXTUAL_OPERATORS,\n  _assigned_to_id: TEXTUAL_OPERATORS,\n  _status: TEXTUAL_OPERATORS,\n  _latitude: NUMERIC_OPERATORS,\n  _longitude: NUMERIC_OPERATORS,\n  _created_at: DATE_OPERATORS,\n  _updated_at: DATE_OPERATORS,\n  _version: NUMERIC_OPERATORS,\n  _created_by_id: TEXTUAL_OPERATORS,\n  _updated_by_id: TEXTUAL_OPERATORS,\n  _server_created_at: DATE_OPERATORS,\n  _server_updated_at: DATE_OPERATORS,\n  _geometry: GEOSPATIAL_OPERATORS,\n  _altitude: NUMERIC_OPERATORS,\n  _speed: NUMERIC_OPERATORS,\n  _course: NUMERIC_OPERATORS,\n  _horizontal_accuracy: NUMERIC_OPERATORS,\n  _vertical_accuracy: NUMERIC_OPERATORS,\n  _changeset_id: TEXTUAL_OPERATORS,\n  _title: TEXTUAL_OPERATORS,\n  _created_latitude: NUMERIC_OPERATORS,\n  _created_longitude: NUMERIC_OPERATORS,\n  _created_geometry: GEOSPATIAL_OPERATORS,\n  _created_altitude: NUMERIC_OPERATORS,\n  _created_horizontal_accuracy: NUMERIC_OPERATORS,\n  _updated_latitude: NUMERIC_OPERATORS,\n  _updated_longitude: NUMERIC_OPERATORS,\n  _updated_geometry: GEOSPATIAL_OPERATORS,\n  _updated_altitude: NUMERIC_OPERATORS,\n  _updated_horizontal_accuracy: NUMERIC_OPERATORS,\n  _created_duration: NUMERIC_OPERATORS,\n  _updated_duration: NUMERIC_OPERATORS,\n  _edited_duration: NUMERIC_OPERATORS\n};\n\nexport function isValueRequired(operator) {\n  return !NO_VALUE_OPERATORS.find(o => o.name === operator);\n}\n\nexport function availableOperatorsForColumn(column) {\n  const operators = [];\n\n  if (column == null) {\n    return operators;\n  }\n\n  if (SYSTEM_COLUMNS[column.id]) {\n    return SYSTEM_COLUMNS[column.id];\n  }\n\n  const element = column && column.element;\n\n  if (element) {\n    if (element.isTextElement) {\n      if (element.isNumeric) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isCalculatedElement) {\n      if (element.display.isNumber || element.display.isCurrency) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else if (element.display.isDate) {\n        operators.push.apply(operators, DATE_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isDateElement) {\n      operators.push.apply(operators, DATE_OPERATORS);\n    }\n\n    if (element.isChoiceElement) {\n      if (element.multiple) {\n        operators.push.apply(operators, ARRAY_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isClassificationElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n\n    if (element.isStatusElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n\n    if (element.isPhotoElement ||\n          element.isVideoElement ||\n          element.isAudioElement ||\n          element.isSignatureElement) {\n      operators.push.apply(operators, MEDIA_OPERATORS);\n    }\n  }\n\n  return operators;\n}\n\nexport function calculateDateRange(operator, value, now) {\n  now = moment(now || new Date()).clone().startOf('day');\n\n  const date1 = now.clone();\n  const date2 = now.clone();\n\n  const range = (start, end) => {\n    return [ start.clone(), (end || start).clone().endOf('day') ];\n  };\n\n  switch (operator) {\n    case OperatorType.DateToday.name:\n      return range(date1);\n\n    case OperatorType.DateYesterday.name:\n      return range(date1.subtract(1, 'days'));\n\n    case OperatorType.DateTomorrow.name:\n      return range(date1.add(1, 'days'));\n\n    case OperatorType.DateLastWeek.name:\n      return range(date1.subtract(1, 'week'), date2);\n\n    case OperatorType.DateLastMonth.name:\n      return range(date1.subtract(1, 'month'), date2);\n\n    case OperatorType.DateLastYear.name:\n      return range(date1.subtract(1, 'year'), date2);\n\n    case OperatorType.DateNextWeek.name:\n      return range(date1, date2.add(1, 'week'));\n\n    case OperatorType.DateNextMonth.name:\n      return range(date1, date2.add(1, 'month'));\n\n    case OperatorType.DateNextYear.name:\n      return range(date1, date2.add(1, 'year'));\n\n    case OperatorType.DateCurrentCalendarWeek.name:\n      return range(date1.startOf('week'), date2.endOf('week'));\n\n    case OperatorType.DatePreviousCalendarWeek.name:\n      return range(date1.subtract(1, 'week').startOf('week'),\n                   date2.subtract(1, 'week').endOf('week'));\n\n    case OperatorType.DateNextCalendarWeek.name:\n      return range(date1.add(1, 'week').startOf('week'),\n                   date2.add(1, 'week').endOf('week'));\n\n    case OperatorType.DateCurrentCalendarMonth.name:\n      return range(date1.startOf('month'), date2.endOf('month'));\n\n    case OperatorType.DatePreviousCalendarMonth.name:\n      return range(date1.subtract(1, 'month').startOf('month'),\n                   date2.subtract(1, 'month').endOf('month'));\n\n    case OperatorType.DateNextCalendarMonth.name:\n      return range(date1.add(1, 'month').startOf('month'),\n                   date2.add(1, 'month').endOf('month'));\n\n    case OperatorType.DateCurrentCalendarYear.name:\n      return range(date1.startOf('year'), date2.endOf('year'));\n\n    case OperatorType.DatePreviousCalendarYear.name:\n      return range(date1.subtract(1, 'year').startOf('year'),\n                   date2.subtract(1, 'year').endOf('year'));\n\n    case OperatorType.DateNextCalendarYear.name:\n      return range(date1.add(1, 'year').startOf('year'),\n                   date2.add(1, 'year').endOf('year'));\n\n    case OperatorType.DateDaysFromNow.name:\n      return value && range(date1, date2.add(+value, 'days'));\n\n    case OperatorType.DateDaysAgo.name:\n      return value && range(date1.subtract(+value, 'days'), date2);\n\n    case OperatorType.DateBetween.name:\n      return value && range(value[0] && moment(value[0]), value[1] && moment(value[1]));\n\n    default:\n      return null;\n  }\n}\n"]}