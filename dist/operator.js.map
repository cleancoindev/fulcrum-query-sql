{"version":3,"sources":["../src/operator.js"],"names":["isValueRequired","isDateOperator","availableOperatorsForColumn","calculateDateRange","OperatorType","Empty","name","label","NotEmpty","Equal","NotEqual","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","Between","NotBetween","In","NotIn","TextContain","TextNotContain","TextStartsWith","TextEndsWith","TextEqual","TextNotEqual","TextMatch","TextNotMatch","DateEqual","DateNotEqual","DateAfter","DateOnOrAfter","DateBefore","DateOnOrBefore","DateToday","DateYesterday","DateTomorrow","DateLast7Days","DateLast30Days","DateLast90Days","DateLastMonth","DateLastYear","DateNextWeek","DateNextMonth","DateNextYear","DateCurrentCalendarWeek","DateCurrentCalendarMonth","DateCurrentCalendarYear","DatePreviousCalendarWeek","DatePreviousCalendarMonth","DatePreviousCalendarYear","DateNextCalendarWeek","DateNextCalendarMonth","DateNextCalendarYear","DateDaysFromNow","DateWeeksFromNow","DateMonthsFromNow","DateYearsFromNow","DateDaysAgo","DateWeeksAgo","DateMonthsAgo","DateYearsAgo","DateBetween","DateNotBetween","ArrayAnyOf","ArrayAllOf","ArrayNoneOf","ArrayEqual","Search","OperatorsByValue","Object","keys","key","TEXTUAL_OPERATORS","DATE_OPERATORS","DYNAMIC_DATE_OPERATORS","FRIENDLY_DATE_OPERATORS","NUMERIC_OPERATORS","ARRAY_OPERATORS","GEOSPATIAL_OPERATORS","MEDIA_OPERATORS","NO_VALUE_OPERATORS","SYSTEM_COLUMNS","_record_id","_project_id","_assigned_to_id","_status","_latitude","_longitude","_created_at","_updated_at","_version","_created_by_id","_updated_by_id","_server_created_at","_server_updated_at","_geometry","_altitude","_speed","_course","_horizontal_accuracy","_vertical_accuracy","_changeset_id","_title","_created_latitude","_created_longitude","_created_geometry","_created_altitude","_created_horizontal_accuracy","_updated_latitude","_updated_longitude","_updated_geometry","_updated_altitude","_updated_horizontal_accuracy","_created_duration","_updated_duration","_edited_duration","operator","find","o","column","operators","id","element","isTextElement","isNumeric","push","apply","isCalculatedElement","display","isNumber","isCurrency","isDate","isDateElement","isChoiceElement","multiple","isClassificationElement","isStatusElement","isPhotoElement","isVideoElement","isAudioElement","isSignatureElement","isSQL","isArray","value","now","Date","clone","startOf","date1","date2","range","start","end","endOf","subtract","add"],"mappings":"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","file":"operator.js","sourcesContent":["import moment from 'moment';\n\nexport const OperatorType = {\n  Empty: {\n    name: 'is_empty',\n    label: 'Is blank'\n  },\n\n  NotEmpty: {\n    name: 'is_not_empty',\n    label: 'Is not blank'\n  },\n\n  Equal: {\n    name: 'equal',\n    label: 'Equals'\n  },\n\n  NotEqual: {\n    name: 'not_equal',\n    label: 'Does not equal'\n  },\n\n  GreaterThan: {\n    name: 'greater_than',\n    label: 'Greater than'\n  },\n\n  GreaterThanOrEqual: {\n    name: 'greater_than_or_equal',\n    label: 'Greater than or equal to'\n  },\n\n  LessThan: {\n    name: 'less_than',\n    label: 'Less than'\n  },\n\n  LessThanOrEqual: {\n    name: 'less_than_or_equal',\n    label: 'Less than or equal to'\n  },\n\n  Between: {\n    name: 'between',\n    label: 'Between'\n  },\n\n  NotBetween: {\n    name: 'not_between',\n    label: 'Not between'\n  },\n\n  In: {\n    name: 'in',\n    label: 'One of'\n  },\n\n  NotIn: {\n    name: 'not_in',\n    label: 'Not one of'\n  },\n\n  TextContain: {\n    name: 'text_contain',\n    label: 'Contains'\n  },\n\n  TextNotContain: {\n    name: 'text_not_contain',\n    label: 'Does not contain'\n  },\n\n  TextStartsWith: {\n    name: 'text_starts_with',\n    label: 'Starts with'\n  },\n\n  TextEndsWith: {\n    name: 'text_ends_with',\n    label: 'Ends with'\n  },\n\n  TextEqual: {\n    name: 'text_equal',\n    label: 'Equals'\n  },\n\n  TextNotEqual: {\n    name: 'text_not_equal',\n    label: 'Does not equal'\n  },\n\n  TextMatch: {\n    name: 'text_match',\n    label: 'Matches regex'\n  },\n\n  TextNotMatch: {\n    name: 'text_not_match',\n    label: 'Does not match regex'\n  },\n\n  DateEqual: {\n    name: 'date_equal',\n    label: 'Equals'\n  },\n\n  DateNotEqual: {\n    name: 'date_not_equal',\n    label: 'Does not equal'\n  },\n\n  DateAfter: {\n    name: 'date_after',\n    label: 'After'\n  },\n\n  DateOnOrAfter: {\n    name: 'date_on_or_after',\n    label: 'On or After'\n  },\n\n  DateBefore: {\n    name: 'date_before',\n    label: 'Before'\n  },\n\n  DateOnOrBefore: {\n    name: 'date_on_or_before',\n    label: 'On or Before'\n  },\n\n  DateToday: {\n    name: 'date_today',\n    label: 'Today'\n  },\n\n  DateYesterday: {\n    name: 'date_yesterday',\n    label: 'Yesterday'\n  },\n\n  DateTomorrow: {\n    name: 'date_tomorrow',\n    label: 'Tomorrow'\n  },\n\n  DateLast7Days: {\n    name: 'date_last_7_days',\n    label: 'Last 7 days'\n  },\n\n  DateLast30Days: {\n    name: 'date_last_30_days',\n    label: 'Last 30 days'\n  },\n\n  DateLast90Days: {\n    name: 'date_last_90_days',\n    label: 'Last 90 days'\n  },\n\n  DateLastMonth: {\n    name: 'date_last_month',\n    label: '1 Month Ago'\n  },\n\n  DateLastYear: {\n    name: 'date_last_year',\n    label: '1 Year Ago'\n  },\n\n  DateNextWeek: {\n    name: 'date_next_week',\n    label: '1 Week from Now'\n  },\n\n  DateNextMonth: {\n    name: 'date_next_month',\n    label: '1 Month from Now'\n  },\n\n  DateNextYear: {\n    name: 'date_next_year',\n    label: '1 Year from Now'\n  },\n\n  DateCurrentCalendarWeek: {\n    name: 'date_current_calendar_week',\n    label: 'This Week'\n  },\n\n  DateCurrentCalendarMonth: {\n    name: 'date_current_calendar_month',\n    label: 'This Month'\n  },\n\n  DateCurrentCalendarYear: {\n    name: 'date_current_calendar_year',\n    label: 'This Year'\n  },\n\n  DatePreviousCalendarWeek: {\n    name: 'date_previous_calendar_week',\n    label: 'Last Week'\n  },\n\n  DatePreviousCalendarMonth: {\n    name: 'date_previous_calendar_month',\n    label: 'Last Month'\n  },\n\n  DatePreviousCalendarYear: {\n    name: 'date_previous_calendar_year',\n    label: 'Last Year'\n  },\n\n  DateNextCalendarWeek: {\n    name: 'date_next_calendar_week',\n    label: 'Next Week'\n  },\n\n  DateNextCalendarMonth: {\n    name: 'date_next_calendar_month',\n    label: 'Next Month'\n  },\n\n  DateNextCalendarYear: {\n    name: 'date_next_calendar_year',\n    label: 'Next Year'\n  },\n\n  DateDaysFromNow: {\n    name: 'date_days_from_now',\n    label: 'Days from Now'\n  },\n\n  DateWeeksFromNow: {\n    name: 'date_weeks_from_now',\n    label: 'Weeks from Now'\n  },\n\n  DateMonthsFromNow: {\n    name: 'date_months_from_now',\n    label: 'Months from now'\n  },\n\n  DateYearsFromNow: {\n    name: 'date_weeks_from_now',\n    label: 'Years from now'\n  },\n\n  DateDaysAgo: {\n    name: 'date_days_ago',\n    label: 'Days ago'\n  },\n\n  DateWeeksAgo: {\n    name: 'date_weeks_ago',\n    label: 'Weeks ago'\n  },\n\n  DateMonthsAgo: {\n    name: 'date_months_ago',\n    label: 'Months ago'\n  },\n\n  DateYearsAgo: {\n    name: 'date_years_ago',\n    label: 'Years ago'\n  },\n\n  DateBetween: {\n    name: 'date_between',\n    label: 'Specific Range'\n  },\n\n  DateNotBetween: {\n    name: 'date_not_between',\n    label: 'Not Between'\n  },\n\n  ArrayAnyOf: {\n    name: 'array_any_of',\n    label: 'Any of'\n  },\n\n  ArrayAllOf: {\n    name: 'array_all_of',\n    label: 'All of'\n  },\n\n  ArrayNoneOf: {\n    name: 'array_none_of',\n    label: 'None of'\n  },\n\n  ArrayEqual: {\n    name: 'array_equal',\n    label: 'Equals'\n  },\n\n  Search: {\n    name: 'search',\n    label: 'Search'\n  }\n};\n\nexport const OperatorsByValue = {};\n\nfor (const key of Object.keys(OperatorType)) {\n  OperatorsByValue[OperatorType[key].name] = OperatorType[key];\n}\n\nconst TEXTUAL_OPERATORS = [\n  OperatorType.In,\n  OperatorType.NotIn,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.TextContain,\n  OperatorType.TextNotContain,\n  OperatorType.TextStartsWith,\n  OperatorType.TextEndsWith,\n  OperatorType.TextEqual,\n  OperatorType.TextNotEqual,\n  OperatorType.TextMatch,\n  OperatorType.TextNotMatch\n];\n\nconst DATE_OPERATORS = [\n  OperatorType.DateEqual,\n  OperatorType.DateOnOrAfter,\n  OperatorType.DateAfter,\n  OperatorType.DateOnOrBefore,\n  OperatorType.DateBefore,\n  // OperatorType.DateBetween,\n  // OperatorType.DateNotBetween,\n  OperatorType.DateNotEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.In,\n  OperatorType.NotIn,\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateLast90Days,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear,\n  OperatorType.DateDaysFromNow,\n  OperatorType.DateWeeksFromNow,\n  OperatorType.DateMonthsFromNow,\n  OperatorType.DateYearsFromNow,\n  OperatorType.DateDaysAgo,\n  OperatorType.DateWeeksAgo,\n  OperatorType.DateMonthsAgo,\n  OperatorType.DateYearsAgo\n];\n\nexport const DYNAMIC_DATE_OPERATORS = [\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateLast90Days,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear,\n  OperatorType.DateDaysFromNow,\n  OperatorType.DateWeeksFromNow,\n  OperatorType.DateMonthsFromNow,\n  OperatorType.DateYearsFromNow,\n  OperatorType.DateDaysAgo,\n  OperatorType.DateWeeksAgo,\n  OperatorType.DateMonthsAgo,\n  OperatorType.DateYearsAgo\n];\n\nexport const FRIENDLY_DATE_OPERATORS = [\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DateBetween\n];\n\nconst NUMERIC_OPERATORS = [\n  OperatorType.Equal,\n  OperatorType.NotEqual,\n  OperatorType.GreaterThan,\n  OperatorType.GreaterThanOrEqual,\n  OperatorType.LessThan,\n  OperatorType.LessThanOrEqual,\n  // OperatorType.Between,\n  // OperatorType.NotBetween,\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.In,\n  OperatorType.NotIn\n];\n\nconst ARRAY_OPERATORS = [\n  OperatorType.ArrayAnyOf,\n  OperatorType.ArrayAllOf,\n  OperatorType.ArrayEqual,\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst GEOSPATIAL_OPERATORS = [\n];\n\nconst MEDIA_OPERATORS = [\n  OperatorType.Empty,\n  OperatorType.NotEmpty\n];\n\nconst NO_VALUE_OPERATORS = [\n  OperatorType.Empty,\n  OperatorType.NotEmpty,\n  OperatorType.DateToday,\n  OperatorType.DateYesterday,\n  OperatorType.DateTomorrow,\n  OperatorType.DateLast7Days,\n  OperatorType.DateLast30Days,\n  OperatorType.DateLast90Days,\n  OperatorType.DateLastMonth,\n  OperatorType.DateLastYear,\n  OperatorType.DateNextWeek,\n  OperatorType.DateNextMonth,\n  OperatorType.DateNextYear,\n  OperatorType.DateCurrentCalendarWeek,\n  OperatorType.DateCurrentCalendarMonth,\n  OperatorType.DateCurrentCalendarYear,\n  OperatorType.DatePreviousCalendarWeek,\n  OperatorType.DatePreviousCalendarMonth,\n  OperatorType.DatePreviousCalendarYear,\n  OperatorType.DateNextCalendarWeek,\n  OperatorType.DateNextCalendarMonth,\n  OperatorType.DateNextCalendarYear\n];\n\nconst SYSTEM_COLUMNS = {\n  _record_id: TEXTUAL_OPERATORS,\n  _project_id: TEXTUAL_OPERATORS,\n  _assigned_to_id: TEXTUAL_OPERATORS,\n  _status: TEXTUAL_OPERATORS,\n  _latitude: NUMERIC_OPERATORS,\n  _longitude: NUMERIC_OPERATORS,\n  _created_at: DATE_OPERATORS,\n  _updated_at: DATE_OPERATORS,\n  _version: NUMERIC_OPERATORS,\n  _created_by_id: TEXTUAL_OPERATORS,\n  _updated_by_id: TEXTUAL_OPERATORS,\n  _server_created_at: DATE_OPERATORS,\n  _server_updated_at: DATE_OPERATORS,\n  _geometry: GEOSPATIAL_OPERATORS,\n  _altitude: NUMERIC_OPERATORS,\n  _speed: NUMERIC_OPERATORS,\n  _course: NUMERIC_OPERATORS,\n  _horizontal_accuracy: NUMERIC_OPERATORS,\n  _vertical_accuracy: NUMERIC_OPERATORS,\n  _changeset_id: TEXTUAL_OPERATORS,\n  _title: TEXTUAL_OPERATORS,\n  _created_latitude: NUMERIC_OPERATORS,\n  _created_longitude: NUMERIC_OPERATORS,\n  _created_geometry: GEOSPATIAL_OPERATORS,\n  _created_altitude: NUMERIC_OPERATORS,\n  _created_horizontal_accuracy: NUMERIC_OPERATORS,\n  _updated_latitude: NUMERIC_OPERATORS,\n  _updated_longitude: NUMERIC_OPERATORS,\n  _updated_geometry: GEOSPATIAL_OPERATORS,\n  _updated_altitude: NUMERIC_OPERATORS,\n  _updated_horizontal_accuracy: NUMERIC_OPERATORS,\n  _created_duration: NUMERIC_OPERATORS,\n  _updated_duration: NUMERIC_OPERATORS,\n  _edited_duration: NUMERIC_OPERATORS\n};\n\nexport function isValueRequired(operator) {\n  return !NO_VALUE_OPERATORS.find(o => o.name === operator);\n}\n\nexport function isDateOperator(operator) {\n  return DATE_OPERATORS.find(o => o.name === operator);\n}\n\nexport function availableOperatorsForColumn(column) {\n  const operators = [];\n\n  if (column == null) {\n    return operators;\n  }\n\n  if (SYSTEM_COLUMNS[column.id]) {\n    return SYSTEM_COLUMNS[column.id];\n  }\n\n  const element = column && column.element;\n\n  if (element) {\n    if (element.isTextElement) {\n      if (element.isNumeric) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isCalculatedElement) {\n      if (element.display.isNumber || element.display.isCurrency) {\n        operators.push.apply(operators, NUMERIC_OPERATORS);\n      } else if (element.display.isDate) {\n        operators.push.apply(operators, DATE_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isDateElement) {\n      operators.push.apply(operators, DATE_OPERATORS);\n    }\n\n    if (element.isChoiceElement) {\n      if (element.multiple) {\n        operators.push.apply(operators, ARRAY_OPERATORS);\n      } else {\n        operators.push.apply(operators, TEXTUAL_OPERATORS);\n      }\n    }\n\n    if (element.isClassificationElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n\n    if (element.isStatusElement) {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n\n    if (element.isPhotoElement ||\n          element.isVideoElement ||\n          element.isAudioElement ||\n          element.isSignatureElement) {\n      operators.push.apply(operators, MEDIA_OPERATORS);\n    }\n  } else if (column.isSQL) {\n    // custom types\n    if (column.isNumber) {\n      operators.push.apply(operators, NUMERIC_OPERATORS);\n    } else if (column.isArray) {\n      operators.push.apply(operators, ARRAY_OPERATORS);\n    } else if (column.isDate) {\n      operators.push.apply(operators, DATE_OPERATORS);\n    } else {\n      operators.push.apply(operators, TEXTUAL_OPERATORS);\n    }\n  } else {\n    operators.push.apply(operators, TEXTUAL_OPERATORS);\n  }\n\n  return operators;\n}\n\nexport function calculateDateRange(operator, value, now) {\n  now = moment(now || new Date()).clone().startOf('day');\n\n  const date1 = now.clone();\n  const date2 = now.clone();\n\n  const range = (start, end) => {\n    return [ start.clone(), (end || start).clone().endOf('day') ];\n  };\n\n  switch (operator) {\n    case OperatorType.DateToday.name:\n      return range(date1);\n\n    case OperatorType.DateYesterday.name:\n      return range(date1.subtract(1, 'days'));\n\n    case OperatorType.DateTomorrow.name:\n      return range(date1.add(1, 'days'));\n\n    case OperatorType.DateLast7Days.name:\n      return range(date1.subtract(7, 'days'), date2);\n\n    case OperatorType.DateLast30Days.name:\n      return range(date1.subtract(30, 'days'), date2);\n\n    case OperatorType.DateLast90Days.name:\n      return range(date1.subtract(90, 'days'), date2);\n\n    case OperatorType.DateLastMonth.name:\n      return range(date1.subtract(1, 'month'), date2);\n\n    case OperatorType.DateLastYear.name:\n      return range(date1.subtract(1, 'year'), date2);\n\n    case OperatorType.DateNextWeek.name:\n      return range(date1, date2.add(1, 'week'));\n\n    case OperatorType.DateNextMonth.name:\n      return range(date1, date2.add(1, 'month'));\n\n    case OperatorType.DateNextYear.name:\n      return range(date1, date2.add(1, 'year'));\n\n    case OperatorType.DateCurrentCalendarWeek.name:\n      return range(date1.startOf('week'), date2.endOf('week'));\n\n    case OperatorType.DatePreviousCalendarWeek.name:\n      return range(date1.subtract(1, 'week').startOf('week'),\n                   date2.subtract(1, 'week').endOf('week'));\n\n    case OperatorType.DateNextCalendarWeek.name:\n      return range(date1.add(1, 'week').startOf('week'),\n                   date2.add(1, 'week').endOf('week'));\n\n    case OperatorType.DateCurrentCalendarMonth.name:\n      return range(date1.startOf('month'), date2.endOf('month'));\n\n    case OperatorType.DatePreviousCalendarMonth.name:\n      return range(date1.subtract(1, 'month').startOf('month'),\n                   date2.subtract(1, 'month').endOf('month'));\n\n    case OperatorType.DateNextCalendarMonth.name:\n      return range(date1.add(1, 'month').startOf('month'),\n                   date2.add(1, 'month').endOf('month'));\n\n    case OperatorType.DateCurrentCalendarYear.name:\n      return range(date1.startOf('year'), date2.endOf('year'));\n\n    case OperatorType.DatePreviousCalendarYear.name:\n      return range(date1.subtract(1, 'year').startOf('year'),\n                   date2.subtract(1, 'year').endOf('year'));\n\n    case OperatorType.DateNextCalendarYear.name:\n      return range(date1.add(1, 'year').startOf('year'),\n                   date2.add(1, 'year').endOf('year'));\n\n    case OperatorType.DateDaysFromNow.name:\n      return value && range(date1, date2.add(+value, 'days'));\n\n    case OperatorType.DateWeeksFromNow.name:\n      return value && range(date1, date2.add(+value, 'weeks'));\n\n    case OperatorType.DateMonthsFromNow.name:\n      return value && range(date1, date2.add(+value, 'months'));\n\n    case OperatorType.DateYearsFromNow.name:\n      return value && range(date1, date2.add(+value, 'years'));\n\n    case OperatorType.DateDaysAgo.name:\n      return value && range(date1.subtract(+value, 'days'), date2);\n\n    case OperatorType.DateWeeksAgo.name:\n      return value && range(date1.subtract(+value, 'weeks'), date2);\n\n    case OperatorType.DateMonthsAgo.name:\n      return value && range(date1.subtract(+value, 'months'), date2);\n\n    case OperatorType.DateYearsAgo.name:\n      return value && range(date1.subtract(+value, 'years'), date2);\n\n    case OperatorType.DateBetween.name:\n      return value && range(value[0] && moment(value[0]), value[1] && moment(value[1]));\n\n    default:\n      return null;\n  }\n}\n"]}