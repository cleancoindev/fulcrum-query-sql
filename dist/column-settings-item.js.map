{"version":3,"sources":["../src/column-settings-item.js"],"names":["ColumnSettingsItem","attrs","schema","_schema","_hidden","hidden","_column","column","_search","search","_filter","filter","field","id","_expression","expression","_range","range","operator","isDate","DateBetween","name","Between","_summary","summary","clear","toJSON","json","isHidden","hasFilter","isValid"],"mappings":"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","file":"column-settings-item.js","sourcesContent":["import { Expression } from './expression';\nimport { OperatorType } from './operator';\nimport ColumnFilter from './column-filter';\nimport ColumnSummary from './column-summary';\n\nexport default class ColumnSettingsItem {\n  constructor(attrs, schema) {\n    this._schema = schema;\n    this._hidden = !!attrs.hidden;\n    this._column = attrs.column;\n    this._search = attrs.search || '';\n    this._filter = new ColumnFilter({...attrs.filter, field: attrs.column.id}, this._schema);\n    this._expression = new Expression({...attrs.expression, field: attrs.column.id}, schema);\n    this._range = new Expression({...attrs.range,\n                                  operator: attrs.column.isDate ? OperatorType.DateBetween.name\n                                                                : OperatorType.Between.name,\n                                  field: attrs.column.id}, schema);\n    this._summary = new ColumnSummary({...attrs.summary, field: attrs.column.id}, this._schema);\n  }\n\n  clear() {\n    this._search = '';\n    this._filter = new ColumnFilter({field: this.column.id}, this._schema);\n    this._expression = new Expression({field: this.column.id}, this._schema);\n    this._range = new Expression({operator: this.column.isDate ? OperatorType.DateBetween.name\n                                                               : OperatorType.Between.name,\n                                  field: this.column.id}, this._schema);\n  }\n\n  toJSON() {\n    const json = {\n      hidden: this.isHidden,\n      column: this.column.toJSON()\n    };\n\n    if (this.search) {\n      json.search = this.search;\n    }\n\n    if (this.filter.hasFilter) {\n      json.filter = this.filter.toJSON();\n    }\n\n    if (this.expression.isValid) {\n      json.expression = this.expression.toJSON();\n    }\n\n    if (this.range.isValid) {\n      json.range = this.range.toJSON();\n    }\n\n    return json;\n  }\n\n  get hasFilter() {\n    return (\n      this._search || this._filter.hasFilter || this._expression.isValid || this._range.isValid\n    );\n  }\n\n  get search() {\n    return this._search;\n  }\n\n  set search(search) {\n    this._search = search || '';\n  }\n\n  get column() {\n    return this._column;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  get summary() {\n    return this._summary;\n  }\n\n  get isVisible() {\n    return !this._hidden;\n  }\n\n  get isHidden() {\n    return this._hidden;\n  }\n\n  set hidden(hidden) {\n    this._hidden = !!hidden;\n  }\n\n  get expression() {\n    return this._expression;\n  }\n\n  get range() {\n    return this._range;\n  }\n}\n"]}