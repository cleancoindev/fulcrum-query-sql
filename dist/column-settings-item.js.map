{"version":3,"sources":["../src/column-settings-item.js"],"names":["ColumnSettingsItem","attrs","schema","_schema","_hidden","hidden","_column","column","_search","search","_filter","filter","field","id","_expression","expression","_range","range","clear","toJSON","isHidden","hasFilter","isValid"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;IAEqBA,kB;AACnB,8BAAYC,KAAZ,EAAmBC,MAAnB,EAA2B;AAAA;;AACzB,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,OAAL,GAAe,CAAC,CAACH,MAAMI,MAAvB;AACA,SAAKC,OAAL,GAAeL,MAAMM,MAArB;AACA,SAAKC,OAAL,GAAeP,MAAMQ,MAAN,IAAgB,EAA/B;AACA,SAAKC,OAAL,GAAe,wCAAqBT,MAAMU,MAA3B,IAAmCC,OAAOX,MAAMM,MAAN,CAAaM,EAAvD,KAA4D,KAAKV,OAAjE,CAAf;AACA,SAAKW,WAAL,GAAmB,2BAAeb,MAAMc,UAArB,EAAiCb,MAAjC,CAAnB;AACA,SAAKc,MAAL,GAAc,2BAAef,MAAMgB,KAArB,EAA4Bf,MAA5B,CAAd;AACD;;+BAEDgB,K,oBAAQ;AACN,SAAKd,OAAL,GAAe,KAAf;AACA,SAAKI,OAAL,GAAe,EAAf;AACA,SAAKM,WAAL,GAAmB,2BAAe,IAAf,EAAqB,KAAKX,OAA1B,CAAnB;AACA,SAAKa,MAAL,GAAc,2BAAe,IAAf,EAAqB,KAAKb,OAA1B,CAAd;AACD,G;;+BAEDgB,M,qBAAS;AACP,WAAO;AACLd,cAAQ,KAAKe,QADR;AAELb,cAAQ,KAAKA,MAAL,CAAYK,KAFf;AAGLH,cAAQ,KAAKA,MAHR;AAILE,cAAQ,KAAKA,MAAL,CAAYQ,MAAZ,EAJH;AAKLJ,kBAAY,KAAKA,UAAL,CAAgBI,MAAhB,EALP;AAMLF,aAAO,KAAKA,KAAL,CAAWE,MAAX;AANF,KAAP;AAQD,G;;;;wBAEe;AACd,aACE,KAAKX,OAAL,IAAgB,KAAKE,OAAL,CAAaW,SAA7B,IAA0C,KAAKP,WAAL,CAAiBQ,OAA3D,IAAsE,KAAKN,MAAL,CAAYM,OADpF;AAGD;;;wBAEY;AACX,aAAO,KAAKd,OAAZ;AACD,K;sBAEUC,M,EAAQ;AACjB,WAAKD,OAAL,GAAeC,UAAU,EAAzB;AACD;;;wBAEY;AACX,aAAO,KAAKH,OAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKI,OAAZ;AACD;;;wBAEe;AACd,aAAO,CAAC,KAAKN,OAAb;AACD;;;wBAEc;AACb,aAAO,KAAKA,OAAZ;AACD;;;sBAEUC,M,EAAQ;AACjB,WAAKD,OAAL,GAAe,CAAC,CAACC,MAAjB;AACD;;;wBAEgB;AACf,aAAO,KAAKS,WAAZ;AACD;;;wBAEW;AACV,aAAO,KAAKE,MAAZ;AACD;;;;;;kBArEkBhB,kB","file":"column-settings-item.js","sourcesContent":["import { Expression } from './expression';\nimport ColumnFilter from './column-filter';\n\nexport default class ColumnSettingsItem {\n  constructor(attrs, schema) {\n    this._schema = schema;\n    this._hidden = !!attrs.hidden;\n    this._column = attrs.column;\n    this._search = attrs.search || '';\n    this._filter = new ColumnFilter({...attrs.filter, field: attrs.column.id}, this._schema);\n    this._expression = new Expression(attrs.expression, schema);\n    this._range = new Expression(attrs.range, schema);\n  }\n\n  clear() {\n    this._hidden = false;\n    this._search = '';\n    this._expression = new Expression(null, this._schema);\n    this._range = new Expression(null, this._schema);\n  }\n\n  toJSON() {\n    return {\n      hidden: this.isHidden,\n      column: this.column.field,\n      search: this.search,\n      filter: this.filter.toJSON(),\n      expression: this.expression.toJSON(),\n      range: this.range.toJSON()\n    };\n  }\n\n  get hasFilter() {\n    return (\n      this._search || this._filter.hasFilter || this._expression.isValid || this._range.isValid\n    );\n  }\n\n  get search() {\n    return this._search;\n  }\n\n  set search(search) {\n    this._search = search || '';\n  }\n\n  get column() {\n    return this._column;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  get isVisible() {\n    return !this._hidden;\n  }\n\n  get isHidden() {\n    return this._hidden;\n  }\n\n  set hidden(hidden) {\n    this._hidden = !!hidden;\n  }\n\n  get expression() {\n    return this._expression;\n  }\n\n  get range() {\n    return this._range;\n  }\n}\n"]}