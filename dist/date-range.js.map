{"version":3,"sources":["../src/date-range.js"],"names":["DATE_FIELDS","label","value","DEFAULT_DATE_FIELD","ALL_TIME","TODAY","YESTERDAY","TOMORROW","LAST_WEEK","LAST_MONTH","LAST_YEAR","NEXT_WEEK","NEXT_MONTH","NEXT_YEAR","CURRENT_CALENDAR_WEEK","PREVIOUS_CALENDAR_WEEK","NEXT_CALENDAR_WEEK","CURRENT_CALENDAR_MONTH","PREVIOUS_CALENDAR_MONTH","NEXT_CALENDAR_MONTH","CURRENT_CALENDAR_YEAR","PREVIOUS_CALENDAR_YEAR","NEXT_CALENDAR_YEAR","DAYS_FROM_NOW","DAYS_AGO","CUSTOM","DATE_RANGE_TYPES","FRIENDLY_DATE_RANGE_TYPES","DEFAULT_RANGE_TYPE","DateRange","_field","_type","_value","toJSON","field","type","resolve","today","Date","startOf","range","start","end","endOf","today2","clone","console","log","subtract","add"],"mappings":";;;;;;;AAAA;;;;;;;;AAEO,IAAMA,oCAAc,CACzB,EAAEC,OAAO,kBAAT,EAA6BC,OAAO,oBAApC,EADyB,EAEzB,EAAED,OAAO,kBAAT,EAA6BC,OAAO,oBAApC,EAFyB,EAGzB,EAAED,OAAO,kBAAT,EAA6BC,OAAO,aAApC,EAHyB,EAIzB,EAAED,OAAO,kBAAT,EAA6BC,OAAO,aAApC,EAJyB,CAApB;;AAOA,IAAMC,kDAAqBH,YAAY,CAAZ,CAA3B;;AAEA,IAAMI,8BAAW,EAAEH,OAAO,UAAT,EAAqBC,OAAO,KAA5B,EAAjB;AACA,IAAMG,wBAAQ,EAAEJ,OAAO,OAAT,EAAkBC,OAAO,OAAzB,EAAd;AACA,IAAMI,gCAAY,EAAEL,OAAO,WAAT,EAAsBC,OAAO,WAA7B,EAAlB;AACA,IAAMK,8BAAW,EAAEN,OAAO,UAAT,EAAqBC,OAAO,UAA5B,EAAjB;AACA,IAAMM,gCAAY,EAAEP,OAAO,YAAT,EAAuBC,OAAO,WAA9B,EAAlB;AACA,IAAMO,kCAAa,EAAER,OAAO,aAAT,EAAwBC,OAAO,YAA/B,EAAnB;AACA,IAAMQ,gCAAY,EAAET,OAAO,YAAT,EAAuBC,OAAO,WAA9B,EAAlB;AACA,IAAMS,gCAAY,EAAEV,OAAO,iBAAT,EAA4BC,OAAO,WAAnC,EAAlB;AACA,IAAMU,kCAAa,EAAEX,OAAO,kBAAT,EAA6BC,OAAO,YAApC,EAAnB;AACA,IAAMW,gCAAY,EAAEZ,OAAO,iBAAT,EAA4BC,OAAO,WAAnC,EAAlB;AACA,IAAMY,wDAAwB,EAAEb,OAAO,WAAT,EAAsBC,OAAO,uBAA7B,EAA9B;AACA,IAAMa,0DAAyB,EAAEd,OAAO,WAAT,EAAsBC,OAAO,wBAA7B,EAA/B;AACA,IAAMc,kDAAqB,EAAEf,OAAO,WAAT,EAAsBC,OAAO,oBAA7B,EAA3B;AACA,IAAMe,0DAAyB,EAAEhB,OAAO,YAAT,EAAuBC,OAAO,wBAA9B,EAA/B;AACA,IAAMgB,4DAA0B,EAAEjB,OAAO,YAAT,EAAuBC,OAAO,yBAA9B,EAAhC;AACA,IAAMiB,oDAAsB,EAAElB,OAAO,YAAT,EAAuBC,OAAO,qBAA9B,EAA5B;AACA,IAAMkB,wDAAwB,EAAEnB,OAAO,WAAT,EAAsBC,OAAO,uBAA7B,EAA9B;AACA,IAAMmB,0DAAyB,EAAEpB,OAAO,WAAT,EAAsBC,OAAO,wBAA7B,EAA/B;AACA,IAAMoB,kDAAqB,EAAErB,OAAO,WAAT,EAAsBC,OAAO,oBAA7B,EAA3B;AACA,IAAMqB,wCAAgB,EAAEtB,OAAO,yBAAT,EAAoCC,OAAO,eAA3C,EAAtB;AACA,IAAMsB,8BAAW,EAAEvB,OAAO,oBAAT,EAA+BC,OAAO,UAAtC,EAAjB;AACA,IAAMuB,0BAAS,EAAExB,OAAO,QAAT,EAAmBC,OAAO,QAA1B,EAAf;;AAEA,IAAMwB,8CAAmB,CAC9BtB,QAD8B,EAE9BC,KAF8B,EAG9BC,SAH8B,EAI9BC,QAJ8B,EAK9BC,SAL8B,EAM9BC,UAN8B,EAO9BC,SAP8B,EAQ9BC,SAR8B,EAS9BC,UAT8B,EAU9BC,SAV8B,EAW9BC,qBAX8B,EAY9BC,sBAZ8B,EAa9BC,kBAb8B,EAc9BC,sBAd8B,EAe9BC,uBAf8B,EAgB9BC,mBAhB8B,EAiB9BC,qBAjB8B,EAkB9BC,sBAlB8B,EAmB9BC,kBAnB8B,EAoB9BC,aApB8B,EAqB9BC,QArB8B,EAsB9BC,MAtB8B,CAAzB;;AAyBA,IAAME,gEAA4B,CACvCvB,QADuC,EAEvCC,KAFuC,EAGvCC,SAHuC,EAIvCC,QAJuC,EAKvCC,SALuC,EAMvCC,UANuC,EAOvCC,SAPuC,EAQvCC,SARuC,EASvCC,UATuC,EAUvCC,SAVuC,EAWvCC,qBAXuC,EAYvCC,sBAZuC,EAavCC,kBAbuC,EAcvCC,sBAduC,EAevCC,uBAfuC,EAgBvCC,mBAhBuC,EAiBvCC,qBAjBuC,EAkBvCC,sBAlBuC,EAmBvCC,kBAnBuC,EAoBvCC,aApBuC,EAqBvCC,QArBuC,EAsBvCC,MAtBuC,CAAlC;;AAyBA,IAAMG,kDAAqBxB,QAA3B;;IAEMyB,S,WAAAA,S;AACX,uBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc3B,mBAAmBD,KAAjC;AACA,SAAK6B,KAAL,GAAaH,mBAAmB1B,KAAhC;AACA,SAAK8B,MAAL,GAAc,IAAd;AACD;;sBA8BDC,M,qBAAS;AACP,WAAO;AACLC,aAAO,KAAKA,KADP;AAELC,YAAM,KAAKA,IAFN;AAGLjC,aAAO,KAAKA;AAHP,KAAP;AAKD,G;;YAEMkC,O,oBAAQD,I,EAAMjC,K,EAAOmC,K,EAAO;AACjCA,YAAQ,sBAAOA,SAAS,IAAIC,IAAJ,EAAhB,EAA4BC,OAA5B,CAAoC,KAApC,CAAR;;AAEA,QAAMC,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5B,aAAO,CAAED,KAAF,EAAS,CAACC,OAAOD,KAAR,EAAeE,KAAf,CAAqB,KAArB,CAAT,CAAP;AACD,KAFD;;AAIA,QAAMC,SAASP,MAAMQ,KAAN,EAAf;;AAEA,YAAQV,IAAR;AACE,WAAK/B,SAASF,KAAd;AACE,eAAO,IAAP;;AAEF,WAAKG,MAAMH,KAAX;AACE4C,gBAAQC,GAAR,CAAY,QAAZ;AACA,eAAOP,MAAMH,KAAN,CAAP;;AAEF,WAAK/B,UAAUJ,KAAf;AACE,eAAOsC,MAAMH,MAAMW,QAAN,CAAe,CAAf,EAAkB,MAAlB,CAAN,CAAP;;AAEF,WAAKzC,SAASL,KAAd;AACE,eAAOsC,MAAMH,MAAMY,GAAN,CAAU,CAAV,EAAa,MAAb,CAAN,CAAP;;AAEF,WAAKzC,UAAUN,KAAf;AACE,eAAOsC,MAAMH,MAAMW,QAAN,CAAe,CAAf,EAAkB,MAAlB,CAAN,EAAiCJ,MAAjC,CAAP;;AAEF,WAAKnC,WAAWP,KAAhB;AACE,eAAOsC,MAAMH,MAAMW,QAAN,CAAe,CAAf,EAAkB,OAAlB,CAAN,EAAkCJ,MAAlC,CAAP;;AAEF,WAAKlC,UAAUR,KAAf;AACE,eAAOsC,MAAMH,MAAMW,QAAN,CAAe,CAAf,EAAkB,MAAlB,CAAN,EAAiCJ,MAAjC,CAAP;;AAEF,WAAKjC,UAAUT,KAAf;AACE,eAAOsC,MAAMI,MAAN,EAAcP,MAAMY,GAAN,CAAU,CAAV,EAAa,MAAb,CAAd,CAAP;;AAEF,WAAKrC,WAAWV,KAAhB;AACE,eAAOsC,MAAMI,MAAN,EAAcP,MAAMY,GAAN,CAAU,CAAV,EAAa,OAAb,CAAd,CAAP;;AAEF,WAAKpC,UAAUX,KAAf;AACE,eAAOsC,MAAMI,MAAN,EAAcP,MAAMY,GAAN,CAAU,CAAV,EAAa,MAAb,CAAd,CAAP;;AAEF,WAAKnC,sBAAsBZ,KAA3B;AACE,eAAOsC,MAAMH,MAAME,OAAN,CAAc,MAAd,CAAN,EAA6BK,OAAOD,KAAP,CAAa,MAAb,CAA7B,CAAP;;AAEF,WAAK5B,uBAAuBb,KAA5B;AACE,eAAOsC,MAAMH,MAAMW,QAAN,CAAe,CAAf,EAAkB,MAAlB,EAA0BT,OAA1B,CAAkC,MAAlC,CAAN,EACMK,OAAOI,QAAP,CAAgB,CAAhB,EAAmB,MAAnB,EAA2BL,KAA3B,CAAiC,MAAjC,CADN,CAAP;;AAGF,WAAK3B,mBAAmBd,KAAxB;AACE,eAAOsC,MAAMH,MAAMY,GAAN,CAAU,CAAV,EAAa,MAAb,EAAqBV,OAArB,CAA6B,MAA7B,CAAN,EACMK,OAAOK,GAAP,CAAW,CAAX,EAAc,MAAd,EAAsBN,KAAtB,CAA4B,MAA5B,CADN,CAAP;;AAGF,WAAK1B,uBAAuBf,KAA5B;AACE,eAAOsC,MAAMH,MAAME,OAAN,CAAc,OAAd,CAAN,EAA8BK,OAAOD,KAAP,CAAa,OAAb,CAA9B,CAAP;;AAEF,WAAKzB,wBAAwBhB,KAA7B;AACE,eAAOsC,MAAMH,MAAMW,QAAN,CAAe,CAAf,EAAkB,OAAlB,EAA2BT,OAA3B,CAAmC,OAAnC,CAAN,EACMK,OAAOI,QAAP,CAAgB,CAAhB,EAAmB,OAAnB,EAA4BL,KAA5B,CAAkC,OAAlC,CADN,CAAP;;AAGF,WAAKxB,oBAAoBjB,KAAzB;AACE,eAAOsC,MAAMH,MAAMY,GAAN,CAAU,CAAV,EAAa,OAAb,EAAsBV,OAAtB,CAA8B,OAA9B,CAAN,EACMK,OAAOK,GAAP,CAAW,CAAX,EAAc,OAAd,EAAuBN,KAAvB,CAA6B,OAA7B,CADN,CAAP;;AAGF,WAAKvB,sBAAsBlB,KAA3B;AACE,eAAOsC,MAAMH,MAAME,OAAN,CAAc,MAAd,CAAN,EAA6BK,OAAOD,KAAP,CAAa,MAAb,CAA7B,CAAP;;AAEF,WAAKtB,uBAAuBnB,KAA5B;AACE,eAAOsC,MAAMH,MAAMW,QAAN,CAAe,CAAf,EAAkB,MAAlB,EAA0BT,OAA1B,CAAkC,MAAlC,CAAN,EACMK,OAAOI,QAAP,CAAgB,CAAhB,EAAmB,MAAnB,EAA2BL,KAA3B,CAAiC,MAAjC,CADN,CAAP;;AAGF,WAAKrB,mBAAmBpB,KAAxB;AACE,eAAOsC,MAAMH,MAAMY,GAAN,CAAU,CAAV,EAAa,MAAb,EAAqBV,OAArB,CAA6B,MAA7B,CAAN,EACMK,OAAOK,GAAP,CAAW,CAAX,EAAc,MAAd,EAAsBN,KAAtB,CAA4B,MAA5B,CADN,CAAP;;AAGF,WAAKpB,cAAcrB,KAAnB;AACE,eAAOA,SAASsC,MAAMH,KAAN,EAAaO,OAAOK,GAAP,CAAW,CAAC/C,KAAZ,EAAmB,MAAnB,CAAb,CAAhB;;AAEF,WAAKsB,SAAStB,KAAd;AACE,eAAOA,SAASsC,MAAMH,MAAMW,QAAN,CAAe,CAAC9C,KAAhB,EAAuB,MAAvB,CAAN,EAAsC0C,MAAtC,CAAhB;;AAEF,WAAKnB,OAAOvB,KAAZ;AACE,eAAOA,SAASsC,MAAM,sBAAOtC,MAAM,CAAN,CAAP,CAAN,EAAwB,sBAAOA,MAAM,CAAN,CAAP,CAAxB,CAAhB;;AAEF;AACE,eAAO,IAAP;AA3EJ;AA6ED,G;;;;wBA1HW;AACV,aAAO,KAAK4B,MAAL,KAAgB1B,SAASF,KAAhC;AACD;;;sBAESgC,K,EAAO;AACf,WAAKJ,MAAL,GAAcI,KAAd;AACD,K;wBAEW;AACV,aAAO,KAAKJ,MAAZ;AACD;;;sBAEQK,I,EAAM;AACb,WAAKJ,KAAL,GAAaI,IAAb;AACD,K;wBAEU;AACT,aAAO,KAAKJ,KAAZ;AACD;;;sBAES7B,K,EAAO;AACf,WAAK8B,MAAL,GAAc9B,KAAd;AACD,K;wBAEW;AACV,aAAO,KAAK8B,MAAZ;AACD","file":"date-range.js","sourcesContent":["import moment from 'moment';\n\nexport const DATE_FIELDS = [\n  { label: 'Updated (Server)', value: '_server_updated_at' },\n  { label: 'Created (Server)', value: '_server_created_at' },\n  { label: 'Updated (Device)', value: '_updated_at' },\n  { label: 'Created (Device)', value: '_created_at' }\n];\n\nexport const DEFAULT_DATE_FIELD = DATE_FIELDS[0];\n\nexport const ALL_TIME = { label: 'All Time', value: 'all' };\nexport const TODAY = { label: 'Today', value: 'today' };\nexport const YESTERDAY = { label: 'Yesterday', value: 'yesterday' };\nexport const TOMORROW = { label: 'Tomorrow', value: 'tomorrow' };\nexport const LAST_WEEK = { label: '1 week ago', value: 'last_week' };\nexport const LAST_MONTH = { label: '1 month ago', value: 'last_month' };\nexport const LAST_YEAR = { label: '1 year ago', value: 'last_year' };\nexport const NEXT_WEEK = { label: '1 week from now', value: 'next_week' };\nexport const NEXT_MONTH = { label: '1 month from now', value: 'next_month' };\nexport const NEXT_YEAR = { label: '1 year from now', value: 'next_year' };\nexport const CURRENT_CALENDAR_WEEK = { label: 'This week', value: 'current_calendar_week' };\nexport const PREVIOUS_CALENDAR_WEEK = { label: 'Last week', value: 'previous_calendar_week' };\nexport const NEXT_CALENDAR_WEEK = { label: 'Next week', value: 'next_calendar_week' };\nexport const CURRENT_CALENDAR_MONTH = { label: 'This month', value: 'current_calendar_month' };\nexport const PREVIOUS_CALENDAR_MONTH = { label: 'Last month', value: 'previous_calendar_month' };\nexport const NEXT_CALENDAR_MONTH = { label: 'Next month', value: 'next_calendar_month' };\nexport const CURRENT_CALENDAR_YEAR = { label: 'This year', value: 'current_calendar_year' };\nexport const PREVIOUS_CALENDAR_YEAR = { label: 'Last year', value: 'previous_calendar_year' };\nexport const NEXT_CALENDAR_YEAR = { label: 'Next year', value: 'next_calendar_year' };\nexport const DAYS_FROM_NOW = { label: 'Number of days from now', value: 'days_from_now' };\nexport const DAYS_AGO = { label: 'Number of days ago', value: 'days_ago' };\nexport const CUSTOM = { label: 'Custom', value: 'custom' };\n\nexport const DATE_RANGE_TYPES = [\n  ALL_TIME,\n  TODAY,\n  YESTERDAY,\n  TOMORROW,\n  LAST_WEEK,\n  LAST_MONTH,\n  LAST_YEAR,\n  NEXT_WEEK,\n  NEXT_MONTH,\n  NEXT_YEAR,\n  CURRENT_CALENDAR_WEEK,\n  PREVIOUS_CALENDAR_WEEK,\n  NEXT_CALENDAR_WEEK,\n  CURRENT_CALENDAR_MONTH,\n  PREVIOUS_CALENDAR_MONTH,\n  NEXT_CALENDAR_MONTH,\n  CURRENT_CALENDAR_YEAR,\n  PREVIOUS_CALENDAR_YEAR,\n  NEXT_CALENDAR_YEAR,\n  DAYS_FROM_NOW,\n  DAYS_AGO,\n  CUSTOM\n];\n\nexport const FRIENDLY_DATE_RANGE_TYPES = [\n  ALL_TIME,\n  TODAY,\n  YESTERDAY,\n  TOMORROW,\n  LAST_WEEK,\n  LAST_MONTH,\n  LAST_YEAR,\n  NEXT_WEEK,\n  NEXT_MONTH,\n  NEXT_YEAR,\n  CURRENT_CALENDAR_WEEK,\n  PREVIOUS_CALENDAR_WEEK,\n  NEXT_CALENDAR_WEEK,\n  CURRENT_CALENDAR_MONTH,\n  PREVIOUS_CALENDAR_MONTH,\n  NEXT_CALENDAR_MONTH,\n  CURRENT_CALENDAR_YEAR,\n  PREVIOUS_CALENDAR_YEAR,\n  NEXT_CALENDAR_YEAR,\n  DAYS_FROM_NOW,\n  DAYS_AGO,\n  CUSTOM\n];\n\nexport const DEFAULT_RANGE_TYPE = ALL_TIME;\n\nexport class DateRange {\n  constructor() {\n    this._field = DEFAULT_DATE_FIELD.value;\n    this._type = DEFAULT_RANGE_TYPE.value;\n    this._value = null;\n  }\n\n  get isAll() {\n    return this._field === ALL_TIME.value;\n  }\n\n  set field(field) {\n    this._field = field;\n  }\n\n  get field() {\n    return this._field;\n  }\n\n  set type(type) {\n    this._type = type;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  toJSON() {\n    return {\n      field: this.field,\n      type: this.type,\n      value: this.value\n    };\n  }\n\n  static resolve(type, value, today) {\n    today = moment(today || new Date()).startOf('day');\n\n    const range = (start, end) => {\n      return [ start, (end || start).endOf('day') ];\n    };\n\n    const today2 = today.clone();\n\n    switch (type) {\n      case ALL_TIME.value:\n        return null;\n\n      case TODAY.value:\n        console.log('TODAY!');\n        return range(today);\n\n      case YESTERDAY.value:\n        return range(today.subtract(1, 'days'));\n\n      case TOMORROW.value:\n        return range(today.add(1, 'days'));\n\n      case LAST_WEEK.value:\n        return range(today.subtract(1, 'week'), today2);\n\n      case LAST_MONTH.value:\n        return range(today.subtract(1, 'month'), today2);\n\n      case LAST_YEAR.value:\n        return range(today.subtract(1, 'year'), today2);\n\n      case NEXT_WEEK.value:\n        return range(today2, today.add(1, 'week'));\n\n      case NEXT_MONTH.value:\n        return range(today2, today.add(1, 'month'));\n\n      case NEXT_YEAR.value:\n        return range(today2, today.add(1, 'year'));\n\n      case CURRENT_CALENDAR_WEEK.value:\n        return range(today.startOf('week'), today2.endOf('week'));\n\n      case PREVIOUS_CALENDAR_WEEK.value:\n        return range(today.subtract(1, 'week').startOf('week'),\n                     today2.subtract(1, 'week').endOf('week'));\n\n      case NEXT_CALENDAR_WEEK.value:\n        return range(today.add(1, 'week').startOf('week'),\n                     today2.add(1, 'week').endOf('week'));\n\n      case CURRENT_CALENDAR_MONTH.value:\n        return range(today.startOf('month'), today2.endOf('month'));\n\n      case PREVIOUS_CALENDAR_MONTH.value:\n        return range(today.subtract(1, 'month').startOf('month'),\n                     today2.subtract(1, 'month').endOf('month'));\n\n      case NEXT_CALENDAR_MONTH.value:\n        return range(today.add(1, 'month').startOf('month'),\n                     today2.add(1, 'month').endOf('month'));\n\n      case CURRENT_CALENDAR_YEAR.value:\n        return range(today.startOf('year'), today2.endOf('year'));\n\n      case PREVIOUS_CALENDAR_YEAR.value:\n        return range(today.subtract(1, 'year').startOf('year'),\n                     today2.subtract(1, 'year').endOf('year'));\n\n      case NEXT_CALENDAR_YEAR.value:\n        return range(today.add(1, 'year').startOf('year'),\n                     today2.add(1, 'year').endOf('year'));\n\n      case DAYS_FROM_NOW.value:\n        return value && range(today, today2.add(+value, 'days'));\n\n      case DAYS_AGO.value:\n        return value && range(today.subtract(+value, 'days'), today2);\n\n      case CUSTOM.value:\n        return value && range(moment(value[0]), moment(value[1]));\n\n      default:\n        return null;\n    }\n  }\n}\n"]}