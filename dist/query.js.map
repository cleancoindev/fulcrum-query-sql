{"version":3,"sources":["../src/query.js"],"names":["Query","attrs","_form","form","_outputs","_schema","schema","_filter","filter","_columnFilters","_sorting","sort","_boundingBox","_searchFilter","_dateFilter","date_filter","field","_statusFilter","status_filter","_projectFilter","project_filter","_assignmentFilter","assignment_filter","_options","options","clearAllFilters","statusFilter","reset","projectFilter","assignmentFilter","columnFilter","column","columnFilters","id","toJSON","outputs","map","o","sorting","column_filters","Object","keys","key","dateFilter","toRawAST","toAST","toCountAST","toTileAST","toDistinctValuesAST","toHistogramAST","applySort","pageSize","pageIndex","outerLimit","finalLimit","sortClause","outerSortClause","fromClause","runtimeFilters","targetList","limitCount","toDistinctValuesSQL","deparse","toHistogramSQL","toCountSQL","toSQL","toTileSQL","boundingBox","searchFilter","ast","actualQuery","createdByJoin","updatedByJoin","assignedToJoin","box","isEmpty","systemSortClause","sorts","expressions","direction","columnName","flatten"],"mappings":"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","file":"query.js","sourcesContent":["import { Condition } from './condition';\nimport { Expression } from './expression';\nimport SortExpressions from './sort-expressions';\nimport Converter from './ast/converter';\nimport ColumnFilter from './column-filter';\nimport Deparse from 'pg-query-deparser';\nimport QueryOptions from './query-options';\nimport _ from 'lodash';\n\nimport { ResTarget,\n         ColumnRef,\n         FuncCall,\n         AConst,\n         StringValue,\n         TypeCast,\n         TypeName,\n         RangeVar,\n         Alias,\n         JoinExpr,\n         AExpr,\n         RangeSubselect,\n         SelectStmt,\n         SortBy,\n         IntegerValue } from './ast/helpers';\n\nexport default class Query {\n  constructor(attrs) {\n    this._form = attrs.form;\n    this._outputs = [];\n    this._schema = attrs.schema;\n    this._filter = new Condition(attrs.filter, attrs.schema);\n    this._columnFilters = {};\n    this._sorting = new SortExpressions(attrs.sort || [], attrs.schema);\n    this._boundingBox = null;\n    this._searchFilter = null;\n    this._dateFilter = new Expression(attrs.date_filter || {field: '_server_updated_at'}, attrs.schema);\n    this._statusFilter = new ColumnFilter({...attrs.status_filter, field: '_status'}, this._schema);\n    this._projectFilter = new ColumnFilter({...attrs.project_filter, field: '_project_id'}, this._schema);\n    this._assignmentFilter = new ColumnFilter({...attrs.assignment_filter, field: '_assigned_to_id'}, this._schema);\n    this._options = new QueryOptions(attrs.options || {});\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get outputs() {\n    return this._outputs;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  get sorting() {\n    return this._sorting;\n  }\n\n  get columnFilters() {\n    return this._columnFilters;\n  }\n\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  get statusFilter() {\n    return this._statusFilter;\n  }\n\n  get projectFilter() {\n    return this._projectFilter;\n  }\n\n  get assignmentFilter() {\n    return this._assignmentFilter;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  clearAllFilters() {\n    this.statusFilter.reset();\n    this.projectFilter.reset();\n    this.assignmentFilter.reset();\n\n    this._columnFilters = {};\n    this._filter = new Condition({}, this._schema);\n    this._sorting = new SortExpressions([], this._schema);\n    // this._boundingBox = null;\n    this._searchFilter = null;\n    this._dateFilter = new Expression({field: '_server_updated_at'}, this._schema);\n  }\n\n  columnFilter(column) {\n    if (this.columnFilters[column.id] == null) {\n      this.columnFilters[column.id] = new ColumnFilter({field: column.id}, this._schema);\n    }\n\n    return this.columnFilters[column.id];\n  }\n\n  set boundingBox(box) {\n    this._boundingBox = box;\n  }\n\n  get boundingBox() {\n    return this._boundingBox;\n  }\n\n  get searchFilter() {\n    return this._searchFilter || '';\n  }\n\n  set searchFilter(filter) {\n    this._searchFilter = filter;\n  }\n\n  get runtimeFilters() {\n    return {\n      boundingBox: this.boundingBox,\n      searchFilter: this.searchFilter,\n      dateFilter: this.dateFilter\n    };\n  }\n\n  toJSON() {\n    return {\n      outputs: this.outputs.map(o => o.toJSON()),\n      filter: this.filter.toJSON(),\n      sorting: this.sorting.toJSON(),\n      column_filters: Object.keys(this.columnFilters).map(key => this.columnFilters[key].toJSON()),\n      options: this.options.toJSON(),\n      date_filter: this.dateFilter.toJSON()\n    };\n  }\n\n  toRawAST(options) {\n    return new Converter().toAST(this, options);\n  }\n\n  toCountAST(options) {\n    return new Converter().toCountAST(this, options);\n  }\n\n  toTileAST(options) {\n    return new Converter().toTileAST(this, options);\n  }\n\n  toDistinctValuesAST(options) {\n    return new Converter().toDistinctValuesAST(this, options);\n  }\n\n  toHistogramAST(options) {\n    return new Converter().toHistogramAST(this, options);\n  }\n\n  toAST({applySort, pageSize, pageIndex, outerLimit}) {\n    const finalLimit = outerLimit ? AConst(IntegerValue(+outerLimit)) : null;\n\n    const sortClause = applySort ? this.outerSortClause : null;\n\n    const fromClause = this.fromClause({applySort, pageSize, pageIndex, ...this.runtimeFilters});\n\n    return SelectStmt({\n      targetList: this.targetList(),\n      fromClause: fromClause,\n      sortClause: sortClause,\n      limitCount: finalLimit\n    });\n  }\n\n  toDistinctValuesSQL(options) {\n    return new Deparse().deparse(this.toDistinctValuesAST(options));\n  }\n\n  toHistogramSQL(options) {\n    return new Deparse().deparse(this.toHistogramAST(options));\n  }\n\n  toCountSQL() {\n    return new Deparse().deparse(this.toCountAST(this.runtimeFilters));\n  }\n\n  toSQL({applySort, pageSize, pageIndex, outerLimit}) {\n    const options = {\n      applySort,\n      pageSize,\n      pageIndex,\n      outerLimit,\n      ...this.runtimeFilters\n    };\n\n    return new Deparse().deparse(this.toAST(options));\n  }\n\n  toTileSQL() {\n    return new Deparse().deparse(this.toTileAST(this.runtimeFilters));\n  }\n\n  targetList() {\n    return [\n      ResTarget(ColumnRef('_status'), 'status'),\n      ResTarget(ColumnRef('_version'), 'version'),\n      ResTarget(ColumnRef('_record_id'), 'id'),\n      ResTarget(FuncCall('to_char', [ ColumnRef('_server_created_at'), AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) ]), 'created_at'),\n      ResTarget(FuncCall('to_char', [ ColumnRef('_server_updated_at'), AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) ]), 'updated_at'),\n      ResTarget(FuncCall('to_char', [ ColumnRef('_created_at'), AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) ]), 'client_created_at'),\n      ResTarget(FuncCall('to_char', [ ColumnRef('_updated_at'), AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"')) ]), 'client_updated_at'),\n      ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n      ResTarget(ColumnRef('name', 'created_by'), 'created_by'),\n      ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n      ResTarget(ColumnRef('name', 'updated_by'), 'updated_by'),\n      ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n      ResTarget(ColumnRef('_project_id'), 'project_id'),\n      ResTarget(ColumnRef('_assigned_to_id'), 'assigned_to_id'),\n      ResTarget(ColumnRef('name', 'assigned_to'), 'assigned_to'),\n      ResTarget(ColumnRef('_form_values'), 'form_values'),\n      ResTarget(ColumnRef('_latitude'), 'latitude'),\n      ResTarget(ColumnRef('_longitude'), 'longitude'),\n      ResTarget(ColumnRef('_altitude'), 'altitude'),\n      ResTarget(ColumnRef('_speed'), 'speed'),\n      ResTarget(ColumnRef('_course'), 'course'),\n      ResTarget(ColumnRef('_horizontal_accuracy'), 'horizontal_accuracy'),\n      ResTarget(ColumnRef('_vertical_accuracy'), 'vertical_accuracy'),\n      ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n      ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n      ResTarget(ColumnRef('_created_duration'), 'created_duration')\n    ];\n  }\n\n  fromClause({applySort, pageSize, pageIndex, boundingBox, searchFilter}) {\n    const ast = applySort ? this.toRawAST({sort: this.sortClause, pageSize, pageIndex, boundingBox, searchFilter})\n                          : this.toRawAST({boundingBox, searchFilter});\n\n    const actualQuery = RangeSubselect(ast, Alias('records'));\n\n    const createdByJoin =\n      JoinExpr(1,\n               actualQuery,\n               RangeVar('memberships', Alias('created_by')),\n               AExpr(0, '=', ColumnRef('_created_by_id', 'records'), ColumnRef('user_id', 'created_by')));\n\n    const updatedByJoin =\n      JoinExpr(1,\n               createdByJoin,\n               RangeVar('memberships', Alias('updated_by')),\n               AExpr(0, '=', ColumnRef('_updated_by_id', 'records'), ColumnRef('user_id', 'updated_by')));\n\n    const assignedToJoin =\n      JoinExpr(1,\n               updatedByJoin,\n               RangeVar('memberships', Alias('assigned_to')),\n               AExpr(0, '=', ColumnRef('_assigned_to_id', 'records'), ColumnRef('user_id', 'assigned_to')));\n\n    return [ assignedToJoin ];\n  }\n\n  get sortClause() {\n    if (this.sorting.isEmpty) {\n      return this.systemSortClause;\n    }\n\n    // always add the record ID to the sorting so it's stable across executions\n    const sorts = this.sorting.expressions.map((sort) => {\n      const direction = sort.direction === 'desc' ? 2 : 1;\n\n      return [\n        SortBy(ColumnRef(sort.columnName), direction, 0),\n        SortBy(ColumnRef('_record_id'), direction, 0)\n      ];\n    });\n\n    return _.flatten(sorts);\n  }\n\n  get systemSortClause() {\n    return [ SortBy(ColumnRef('_server_updated_at'), 2, 0) ];\n  }\n\n  get outerSortClause() {\n    return [ SortBy(ColumnRef('_row_number'), 1, 0) ];\n  }\n}\n"]}