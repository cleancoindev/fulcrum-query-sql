{"version":3,"sources":["../src/query.js"],"names":["Query","attrs","_ast","ast","_form","form","_repeatableKey","repeatableKey","_schema","schema","_filter","filter","_sorting","sorting","_boundingBox","bounding_box","_searchFilter","search_filter","_dateFilter","date_filter","field","defaultDateField","_options","options","_columnSettings","columns","_statusFilter","status_filter","_projectFilter","project_filter","_assignmentFilter","assignment_filter","setup","clearAllFilters","statusFilter","reset","projectFilter","assignmentFilter","columnSettings","toJSON","boundingBox","searchFilter","dateFilter","toRawAST","toAST","toCountAST","toTileAST","toDistinctValuesAST","toHistogramAST","applySort","pageSize","pageIndex","outerLimit","finalLimit","sortClause","outerSortClause","fromClause","runtimeFilters","targetList","limitCount","deparse","toSchemaAST","toDistinctValuesSQL","toHistogramSQL","toCountSQL","toSQL","toTileSQL","toSummarySQL","columnSetting","toSummaryAST","timeZoneCast","columnRef","timeZoneFormat","joinedColumns","subJoinColumns","joinColumnsWithSorting","createdByColumn","indexOf","push","updatedByColumn","assignedToColumn","alias","projectColumn","id","sort","baseQuery","joinClause","join","toHumanDescription","parts","description","map","o","desc","geometryColumns","length","geometryColumn","duplicateResTargetWithExactName","SelectStmt","hasFilter","find","isValid","expressions","hasSort","joins","column","apply","allExpressions","joinColumns","box","isEmpty","systemSortClause","sorts","direction","source","columnName","flatten"],"mappings":"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","file":"query.js","sourcesContent":["import { Condition } from './condition';\nimport { Expression } from './expression';\nimport SortExpressions from './sort-expressions';\nimport Converter from './ast/converter';\nimport ColumnFilter from './column-filter';\nimport Deparse from 'pg-query-deparser';\nimport QueryOptions from './query-options';\nimport _ from 'lodash';\nimport ColumnSettings from './column-settings';\n\nimport { ResTarget,\n         ColumnRef,\n         FuncCall,\n         AConst,\n         StringValue,\n         TypeCast,\n         TypeName,\n         Alias,\n         RangeSubselect,\n         SelectStmt,\n         SortBy,\n         IntegerValue,\n         AStar } from './ast/helpers';\n\nexport default class Query {\n  constructor(attrs) {\n    this._ast = attrs.ast;\n    this._form = attrs.form;\n    this._repeatableKey = attrs.repeatableKey;\n    this._schema = attrs.schema;\n    this._filter = new Condition(attrs.filter, attrs.schema);\n    this._sorting = new SortExpressions(attrs.sorting, attrs.schema);\n    this._boundingBox = attrs.bounding_box || null;\n    this._searchFilter = attrs.search_filter;\n    this._dateFilter = new Expression(attrs.date_filter || {field: this.defaultDateField}, attrs.schema);\n    this._options = new QueryOptions(attrs.options || {});\n    this._columnSettings = new ColumnSettings(this._schema, attrs.columns);\n    this._statusFilter = new ColumnFilter({...attrs.status_filter, field: attrs.repeatableKey ? '_record_status' : '_status'}, this._schema);\n    this._projectFilter = new ColumnFilter({...attrs.project_filter, field: 'project.name'}, this._schema);\n    this._assignmentFilter = new ColumnFilter({...attrs.assignment_filter, field: 'assigned_to.name'}, this._schema);\n\n    this.setup();\n  }\n\n  get ast() {\n    return this._ast;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get repeatableKey() {\n    return this._repeatableKey;\n  }\n\n  get schema() {\n    return this._schema;\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  get sorting() {\n    return this._sorting;\n  }\n\n  get columnSettings() {\n    return this._columnSettings;\n  }\n\n  get dateFilter() {\n    return this._dateFilter;\n  }\n\n  get statusFilter() {\n    return this._statusFilter;\n  }\n\n  get projectFilter() {\n    return this._projectFilter;\n  }\n\n  get assignmentFilter() {\n    return this._assignmentFilter;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get hasFilter() {\n    return this.statusFilter.hasFilter ||\n           this.projectFilter.hasFilter ||\n           this.assignmentFilter.hasFilter ||\n           this.columnSettings.columns.find(o => o.hasFilter) ||\n           this.searchFilter ||\n           this.dateFilter.isValid ||\n           this.filter.expressions.find(o => o.isValid) ||\n           this.sorting.hasSort;\n  }\n\n  get joinColumns() {\n    const joins = [];\n\n    if (this.projectFilter.hasFilter) {\n      joins.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      joins.push(this.assignmentFilter.column);\n    }\n\n    joins.push.apply(joins, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter && o.column.join;\n    }).map(o => o.column));\n\n    joins.push.apply(joins, this.filter.allExpressions.filter((o) => {\n      return o.isValid && o.column.join;\n    }).map(o => o.column));\n\n    return joins;\n  }\n\n  get referencedColumns() {\n    const columns = [];\n\n    if (this.projectFilter.hasFilter) {\n      columns.push(this.projectFilter.column);\n    }\n\n    if (this.assignmentFilter.hasFilter) {\n      columns.push(this.assignmentFilter.column);\n    }\n\n    columns.push.apply(columns, this.columnSettings.columns.filter((o) => {\n      return o.hasFilter;\n    }).map(o => o.column));\n\n    columns.push.apply(columns, this.filter.allExpressions.filter((o) => {\n      return o.isValid;\n    }).map(o => o.column));\n\n    if (this.sorting.hasSort) {\n      columns.push.apply(columns, this.sorting.expressions.filter((o) => {\n        return o.isValid;\n      }).map(o => o.column));\n    }\n\n    return columns;\n  }\n\n  get joinColumnsWithSorting() {\n    const joins = this.joinColumns;\n\n    if (this.sorting.hasSort) {\n      joins.push.apply(joins, this.sorting.expressions.filter((o) => {\n        return o.isValid && o.column.join;\n      }).map(o => o.column));\n    }\n\n    return joins;\n  }\n\n  get defaultDateField() {\n    return this.repeatableKey ? '_updated_at' : '_server_updated_at';\n  }\n\n  clearAllFilters() {\n    this.statusFilter.reset();\n    this.projectFilter.reset();\n    this.assignmentFilter.reset();\n\n    this.columnSettings.reset();\n\n    this._filter = new Condition(null, this._schema);\n    this._sorting = new SortExpressions(null, this._schema);\n    // this._boundingBox = null;\n    this._searchFilter = '';\n    this._dateFilter = new Expression({field: this.defaultDateField}, this._schema);\n  }\n\n  set boundingBox(box) {\n    this._boundingBox = box;\n  }\n\n  get boundingBox() {\n    return this._boundingBox;\n  }\n\n  get searchFilter() {\n    return this._searchFilter || '';\n  }\n\n  set searchFilter(filter) {\n    this._searchFilter = filter;\n  }\n\n  get runtimeFilters() {\n    return {\n      boundingBox: this.boundingBox,\n      searchFilter: this.searchFilter,\n      dateFilter: this.dateFilter\n    };\n  }\n\n  toJSON({boundingBox = false} = {}) {\n    return {\n      filter: this.filter.toJSON(),\n      sorting: this.sorting.toJSON(),\n      options: this.options.toJSON(),\n      bounding_box: boundingBox ? this.boundingBox : null,\n      search_filter: this.searchFilter,\n      date_filter: this.dateFilter.toJSON(),\n      columns: this.columnSettings.toJSON(),\n      status_filter: this.statusFilter.toJSON(),\n      project_filter: this.projectFilter.toJSON(),\n      assignment_filter: this.assignmentFilter.toJSON()\n    };\n  }\n\n  toRawAST(options) {\n    return new Converter().toAST(this, options);\n  }\n\n  toCountAST(options) {\n    return new Converter().toCountAST(this, options);\n  }\n\n  toTileAST(options) {\n    return new Converter().toTileAST(this, options);\n  }\n\n  toDistinctValuesAST(options) {\n    return new Converter().toDistinctValuesAST(this, options);\n  }\n\n  toHistogramAST(options) {\n    return new Converter().toHistogramAST(this, options);\n  }\n\n  toAST({applySort, pageSize, pageIndex, outerLimit}) {\n    const finalLimit = outerLimit ? AConst(IntegerValue(+outerLimit)) : null;\n\n    const sortClause = applySort ? this.outerSortClause : null;\n\n    const fromClause = this.fromClause({applySort, pageSize, pageIndex, ...this.runtimeFilters});\n\n    return SelectStmt({\n      targetList: this.targetList(),\n      fromClause: fromClause,\n      sortClause: sortClause,\n      limitCount: finalLimit\n    });\n  }\n\n  deparse(ast) {\n    return new Deparse().deparse(ast);\n  }\n\n  toSchemaAST(ast, options) {\n    return new Converter().toSchemaAST(ast, options);\n  }\n\n  toDistinctValuesSQL(options) {\n    return this.deparse(this.toDistinctValuesAST(options));\n  }\n\n  toHistogramSQL(options) {\n    return this.deparse(this.toHistogramAST(options));\n  }\n\n  toCountSQL() {\n    return this.deparse(this.toCountAST(this.runtimeFilters));\n  }\n\n  toSQL({applySort, pageSize, pageIndex, outerLimit}) {\n    const options = {\n      applySort,\n      pageSize,\n      pageIndex,\n      outerLimit,\n      ...this.runtimeFilters\n    };\n\n    return this.deparse(this.toAST(options));\n  }\n\n  toTileSQL() {\n    return this.deparse(this.toTileAST(this.runtimeFilters));\n  }\n\n  toSummarySQL(columnSetting) {\n    const ast = new Converter().toSummaryAST(this, columnSetting, this.runtimeFilters);\n    return this.deparse(ast);\n  }\n\n  targetList() {\n    if (this.ast) {\n      return [ ResTarget(ColumnRef(AStar())) ];\n    }\n\n    const timeZoneCast = (columnRef) => {\n      return FuncCall([ StringValue('pg_catalog'), StringValue('timezone') ], [ AConst(StringValue('UTC')), columnRef ]);\n    };\n\n    const timeZoneFormat = AConst(StringValue('YYYY-MM-DD\"T\"HH24:MI:SS\"Z\"'));\n\n    const joinedColumns = [];\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n    const subJoinColumns = this.joinColumnsWithSorting;\n\n    if (this.schema.createdByColumn) {\n      if (subJoinColumns.indexOf(this.schema.createdByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'created_by'), 'created_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('created_by.name'), 'created_by'));\n      }\n    }\n\n    if (this.schema.updatedByColumn) {\n      if (subJoinColumns.indexOf(this.schema.updatedByColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'updated_by'), 'updated_by'));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('updated_by.name'), 'updated_by'));\n      }\n    }\n\n    if (this.schema.assignedToColumn) {\n      const alias = this.repeatableKey ? 'record_assigned_to' : 'assigned_to';\n\n      if (subJoinColumns.indexOf(this.schema.assignedToColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'assigned_to'), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('assigned_to.name'), alias));\n      }\n    }\n\n    if (this.schema.projectColumn) {\n      const alias = this.repeatableKey ? 'record_project' : 'project';\n\n      if (subJoinColumns.indexOf(this.schema.projectColumn) === -1) {\n        joinedColumns.push(ResTarget(ColumnRef('name', 'project'), alias));\n      } else {\n        joinedColumns.push(ResTarget(ColumnRef('project.name'), alias));\n      }\n    }\n\n    if (this.repeatableKey) {\n      return [\n        ResTarget(ColumnRef('_record_status'), 'record_status'),\n        ResTarget(ColumnRef('_version'), 'version'),\n        ResTarget(ColumnRef('_child_record_id'), 'id'),\n        ResTarget(ColumnRef('_record_id'), 'record_id'),\n        ResTarget(ColumnRef('_parent_id'), 'parent_id'),\n        ResTarget(ColumnRef('_index'), 'index'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_created_at')) ]),\n                  'created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_server_updated_at')) ]),\n                  'updated_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_created_at')) ]),\n                  'client_created_at'),\n        ResTarget(FuncCall([ StringValue('pg_catalog'), StringValue('date_part') ],\n                           [ AConst(StringValue('epoch')), timeZoneCast(ColumnRef('_updated_at')) ]),\n                  'client_updated_at'),\n        ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n        ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n        ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n        ResTarget(ColumnRef('_record_project_id'), 'record_project_id'),\n        ResTarget(ColumnRef('_record_assigned_to_id'), 'record_assigned_to_id'),\n        ResTarget(ColumnRef('_form_values'), 'form_values'),\n        ResTarget(ColumnRef('_latitude'), 'latitude'),\n        ResTarget(ColumnRef('_longitude'), 'longitude'),\n        ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n        ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n        ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n        ...joinedColumns\n      ];\n    }\n\n    return [\n      ResTarget(ColumnRef('_status'), 'status'),\n      ResTarget(ColumnRef('_version'), 'version'),\n      ResTarget(ColumnRef('_record_id'), 'id'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_created_at')),\n                                      timeZoneFormat ]), 'created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_server_updated_at')),\n                                      timeZoneFormat ]), 'updated_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_created_at')),\n                                      timeZoneFormat ]), 'client_created_at'),\n      ResTarget(FuncCall('to_char', [ timeZoneCast(ColumnRef('_updated_at')),\n                                      timeZoneFormat ]), 'client_updated_at'),\n      ResTarget(ColumnRef('_created_by_id'), 'created_by_id'),\n      ResTarget(ColumnRef('_updated_by_id'), 'updated_by_id'),\n      ResTarget(TypeCast(TypeName('text'), AConst(StringValue(this.form.id))), 'form_id'),\n      ResTarget(ColumnRef('_project_id'), 'project_id'),\n      ResTarget(ColumnRef('_assigned_to_id'), 'assigned_to_id'),\n      ResTarget(ColumnRef('_form_values'), 'form_values'),\n      ResTarget(ColumnRef('_latitude'), 'latitude'),\n      ResTarget(ColumnRef('_longitude'), 'longitude'),\n      ResTarget(ColumnRef('_altitude'), 'altitude'),\n      ResTarget(ColumnRef('_speed'), 'speed'),\n      ResTarget(ColumnRef('_course'), 'course'),\n      ResTarget(ColumnRef('_horizontal_accuracy'), 'horizontal_accuracy'),\n      ResTarget(ColumnRef('_vertical_accuracy'), 'vertical_accuracy'),\n      ResTarget(ColumnRef('_edited_duration'), 'edited_duration'),\n      ResTarget(ColumnRef('_updated_duration'), 'updated_duration'),\n      ResTarget(ColumnRef('_created_duration'), 'created_duration'),\n      ...joinedColumns\n    ];\n  }\n\n  fromClause({applySort, pageSize, pageIndex, boundingBox, searchFilter}) {\n    const ast = applySort ? this.toRawAST({sort: this.sortClause, pageSize, pageIndex, boundingBox, searchFilter})\n                          : this.toRawAST({boundingBox, searchFilter});\n\n    let baseQuery = RangeSubselect(ast, Alias('records'));\n\n    if (this.ast) {\n      return [ baseQuery ];\n    }\n\n    // The \"subJoinColumns\" are joins that need to happen in the inner sub-select from Converter.\n    // We don't need to join them in the outer part.\n    const subJoinColumns = this.joinColumnsWithSorting;\n\n    if (this.schema.createdByColumn && subJoinColumns.indexOf(this.schema.createdByColumn) === -1) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.createdByColumn.join);\n    }\n\n    if (this.schema.updatedByColumn && subJoinColumns.indexOf(this.schema.updatedByColumn) === -1) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.updatedByColumn.join);\n    }\n\n    if (this.schema.assignedToColumn && subJoinColumns.indexOf(this.schema.assignedToColumn) === -1) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.assignedToColumn.join);\n    }\n\n    if (this.schema.projectColumn && subJoinColumns.indexOf(this.schema.projectColumn) === -1) {\n      baseQuery = Converter.joinClause(baseQuery, this.schema.projectColumn.join);\n    }\n\n    return [ baseQuery ];\n  }\n\n  get sortClause() {\n    if (this.sorting.isEmpty) {\n      return this.systemSortClause;\n    }\n\n    // always add the record ID to the sorting so it's stable across executions\n    const sorts = this.sorting.expressions.map((sort) => {\n      const direction = sort.direction === 'desc' ? 2 : 1;\n\n      if (this.ast) {\n        return [\n          SortBy(ColumnRef(sort.column.id, sort.column.source), direction, 0)\n        ];\n      }\n\n      return [\n        SortBy(ColumnRef(sort.column.columnName, sort.column.source), direction, 0),\n        SortBy(ColumnRef('_record_id'), direction, 0)\n      ];\n    });\n\n    return _.flatten(sorts);\n  }\n\n  get systemSortClause() {\n    if (this.ast) {\n      return [ SortBy(AConst(IntegerValue(1)), 2, 0) ];\n    }\n\n    if (this.repeatableKey) {\n      return [ SortBy(ColumnRef('_updated_at'), 2, 0) ];\n    }\n\n    return [ SortBy(ColumnRef('_server_updated_at'), 2, 0) ];\n  }\n\n  get outerSortClause() {\n    return [ SortBy(ColumnRef('__row_number'), 1, 0) ];\n  }\n\n  toHumanDescription() {\n    const parts = [];\n\n    let description = null;\n\n    if ((description = this.statusFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.projectFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.assignmentFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    if ((description = this.columnSettings.columns.map(o => o.filter).map(o => o.toHumanDescription()))) {\n      for (const desc of description) {\n        if (desc) {\n          parts.push(desc);\n        }\n      }\n    }\n\n    if (this.searchFilter) {\n      parts.push('Search by ' + this.searchFilter);\n    }\n\n    if ((description = this.dateFilter.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    // if ((description = this.filter.toHumanDescription())) {\n    //   parts.push(description);\n    // }\n\n    if ((description = this.sorting.toHumanDescription())) {\n      parts.push(description);\n    }\n\n    return parts.join(', ');\n  }\n\n  setup() {\n    if (!this.ast) {\n      return;\n    }\n\n    const geometryColumns = this.schema.geometryColumns;\n\n    if (geometryColumns.length) {\n      // For custom SQL, we need to add a column called __geometry at the end that evaluates to the\n      // exact same expression as the first geometry column. This is needed so that queries like\n      // SELECT geom, * FROM table will work when we need to reference the geom column from an outer\n      // query.\n      const geometryColumn = geometryColumns[0];\n\n      Converter.duplicateResTargetWithExactName(this, this.ast.SelectStmt.targetList,\n                                                geometryColumn, '__geometry');\n    }\n  }\n}\n"]}