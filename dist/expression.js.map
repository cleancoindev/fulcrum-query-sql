{"version":3,"sources":["../src/expression.js"],"names":["Expression","attrs","schema","_field","field","_operator","operator","_value","value","_schema","toggleValue","containsValue","without","push","find","o","toString","toJSON","isValid","isEqual","other","JSON","stringify","availableOperators","column","clearRangeValuesIfNull","labelForValue","element","isStatusElement","choice","statusForValue","label","isChoiceElement","choiceByValue","toHumanDescription","parts","name","columnName","supportsValue","length","join","hasValue","columnForFieldKey","id","date","format"],"mappings":"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","file":"expression.js","sourcesContent":["import _ from 'lodash';\n\nimport { availableOperatorsForColumn, isValueRequired, isDateOperator, OperatorsByValue } from './operator';\n\nexport class Expression {\n  constructor(attrs, schema) {\n    attrs = attrs || {};\n\n    this._field = attrs.field || null;\n    this._operator = attrs.operator || null;\n    this._value = attrs.value || null;\n    this._schema = schema;\n  }\n\n  get isValid() {\n    if (!isValueRequired(this.operator)) {\n      return this.column != null && this.operator != null;\n    }\n\n    return this.column != null && this.operator != null && this.hasValue;\n  }\n\n  get supportsValue() {\n    return isValueRequired(this.operator);\n  }\n\n  get hasValue() {\n    return this.value !== null && this.value.length !== 0;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get scalarValue() {\n    if (this.hasValue) {\n      return this.value[0];\n    }\n\n    return null;\n  }\n\n  set scalarValue(value) {\n    this._value = value ? [ value ] : null;\n  }\n\n  get value1() {\n    return this.value && this.value[0];\n  }\n\n  set value1(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ value, this.value[1] ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  get value2() {\n    return this.value && this.value[1];\n  }\n\n  set value2(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ this.value[0], value ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  get isDateOperator() {\n    return isDateOperator(this.operator);\n  }\n\n  get operator() {\n    return this._operator;\n  }\n\n  set operator(operator) {\n    this._operator = operator;\n  }\n\n  get field() {\n    return this._field;\n  }\n\n  set field(field) {\n    this._field = field;\n  }\n\n  get column() {\n    return this._schema.columnForFieldKey(this.field);\n  }\n\n  set column(column) {\n    this._field = column ? column.id : null;\n\n    // if the change in the field results in the operator not being valid, clear the operator\n    if (this._operator && this.availableOperators().find(o => o.name === this._operator) === -1) {\n      this._operator = null;\n    }\n  }\n\n  get columnName() {\n    if (this.column) {\n      return this.column.columnName;\n    }\n    return null;\n  }\n\n  toggleValue(value) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    if (this.containsValue(value)) {\n      this._value = _.without(this.value, value);\n    } else {\n      this._value.push(value);\n    }\n  }\n\n  containsValue(value) {\n    if (this.value == null) {\n      return false;\n    }\n\n    return this.value.find(o => (value == null && o == null) || (value != null && o != null && o.toString() === value.toString()));\n  }\n\n  toJSON() {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return {\n      field: this._field,\n      operator: this._operator,\n      value: this._value\n    };\n  }\n\n  isEqual(other) {\n    if (other == null || !(other instanceof Expression)) {\n      return false;\n    }\n\n    return this.field === other.field &&\n           this.operator === other.operator &&\n           JSON.stringify(this.value) === JSON.stringify(other.value);\n  }\n\n  availableOperators() {\n    return availableOperatorsForColumn(this.column);\n  }\n\n  get startDate() {\n    return this._value && this._value[0];\n  }\n\n  set startDate(date) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ date && date.format('YYYY-MM-DD'), this.value[1] ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  get endDate() {\n    return this._value && this._value[1];\n  }\n\n  set endDate(date) {\n    if (!this._value) {\n      this._value = [];\n    }\n\n    this._value = [ this.value[0], date && date.format('YYYY-MM-DD') ];\n\n    this.clearRangeValuesIfNull();\n  }\n\n  clearRangeValuesIfNull() {\n    // if both values are null, clear it, don't allow [ null, null ]\n    if (this._value[0] == null && this._value[1] == null) {\n      this._value = null;\n    }\n  }\n\n  labelForValue(value) {\n    const column = this.column;\n\n    if (!column) {\n      return value;\n    }\n\n    const element = this.column.element;\n\n    if (element) {\n      if (element.isStatusElement) {\n        const choice = element.statusForValue(value);\n\n        if (choice) {\n          return choice.label;\n        }\n      } else if (element.isChoiceElement) {\n        const choice = element.choiceByValue(value);\n\n        if (choice) {\n          return choice.label;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  toHumanDescription() {\n    if (!this.isValid) {\n      return null;\n    }\n\n    const parts = [\n      this.column ? this.column.name : this.columnName,\n      OperatorsByValue[this.operator].label\n    ];\n\n    if (this.supportsValue) {\n      if (this.value.length === 1) {\n        parts.push(this.value.join(', '));\n      } else {\n        parts.push('[' + this.value.join(', ') + ']');\n      }\n    }\n\n    return parts.join(' ');\n  }\n}\n"]}