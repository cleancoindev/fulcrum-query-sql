{"version":3,"sources":["../src/sort.js"],"names":["DIRECTION_ASC","DIRECTION_DESC","DIRECTIONS","Asc","Desc","Sort","attrs","schema","_field","field","_direction","direction","_schema","toJSON","toHumanDescription","isValid","column","name","columnName","toUpperCase","join","columnForFieldKey","id"],"mappings":";;;;;;;;AAAO,IAAMA,wCAAgB,KAAtB;;AAEA,IAAMC,0CAAiB,MAAvB;;AAEA,IAAMC,kCAAa;AACxBC,OAAKH,aADmB;AAExBI,QAAMH;AAFkB,CAAnB;;IAKMI,I,WAAAA,I;AACX,gBAAYC,KAAZ,EAAmBC,MAAnB,EAA2B;AAAA;;AACzB,SAAKC,MAAL,GAAcF,MAAMG,KAAN,IAAe,IAA7B;AACA,SAAKC,UAAL,GAAkBJ,MAAMK,SAAN,IAAmB,IAArC;AACA,SAAKC,OAAL,GAAeL,MAAf;AACD;;iBAiCDM,M,qBAAS;AACP,WAAO;AACLJ,aAAO,KAAKD,MADP;AAELG,iBAAW,KAAKD;AAFX,KAAP;AAID,G;;iBAEDI,kB,iCAAqB;AACnB,QAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,WAAO,CAAE,KAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAA1B,GAAiC,KAAKC,UAAxC,EAAoD,KAAKP,SAAL,CAAeQ,WAAf,EAApD,EAAmFC,IAAnF,CAAwF,GAAxF,CAAP;AACD,G;;;;wBA5Ca;AACZ,aAAO,CAAC,CAAC,KAAKJ,MAAd;AACD;;;wBAEe;AACd,aAAO,KAAKN,UAAZ;AACD,K;sBAEaC,S,EAAW;AACvB,WAAKD,UAAL,GAAkBC,SAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKH,MAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKI,OAAL,CAAaS,iBAAb,CAA+B,KAAKZ,KAApC,CAAP;AACD,K;sBAEUO,M,EAAQ;AACjB,WAAKR,MAAL,GAAcQ,SAASA,OAAOM,EAAhB,GAAqB,IAAnC;AACD;;;wBAEgB;AACf,UAAI,KAAKN,MAAT,EAAiB;AACf,eAAO,KAAKA,MAAL,CAAYE,UAAnB;AACD;AACD,aAAO,IAAP;AACD","file":"sort.js","sourcesContent":["export const DIRECTION_ASC = 'asc';\n\nexport const DIRECTION_DESC = 'desc';\n\nexport const DIRECTIONS = {\n  Asc: DIRECTION_ASC,\n  Desc: DIRECTION_DESC\n};\n\nexport class Sort {\n  constructor(attrs, schema) {\n    this._field = attrs.field || null;\n    this._direction = attrs.direction || null;\n    this._schema = schema;\n  }\n\n  get isValid() {\n    return !!this.column;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  set direction(direction) {\n    this._direction = direction;\n  }\n\n  get field() {\n    return this._field;\n  }\n\n  get column() {\n    return this._schema.columnForFieldKey(this.field);\n  }\n\n  set column(column) {\n    this._field = column ? column.id : null;\n  }\n\n  get columnName() {\n    if (this.column) {\n      return this.column.columnName;\n    }\n    return null;\n  }\n\n  toJSON() {\n    return {\n      field: this._field,\n      direction: this._direction\n    };\n  }\n\n  toHumanDescription() {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return [ this.column ? this.column.name : this.columnName, this.direction.toUpperCase() ].join(' ');\n  }\n}\n"]}