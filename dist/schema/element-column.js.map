{"version":3,"sources":["../../src/schema/element-column.js"],"names":["ElementColumn","element","rawColumn","type","id","part","_type","_element","_rawColumn","_id","key","_part","valueFrom","feature","isStatusElement","statusValue","formValues","get","exportValue","options","value","format","label","name","dataName"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,a;;;AACnB,+BAAkD;AAAA,QAArCC,OAAqC,QAArCA,OAAqC;AAAA,QAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,EAAW,QAAXA,EAAW;AAAA,QAAPC,IAAO,QAAPA,IAAO;;AAAA;;AAAA,iDAChD,kBADgD;;AAGhD,UAAKC,KAAL,GAAaH,IAAb;AACA,UAAKI,QAAL,GAAgBN,OAAhB;AACA,UAAKO,UAAL,GAAkBN,SAAlB;AACA,UAAKO,GAAL,GAAWL,MAAMH,QAAQS,GAAzB;AACA,UAAKC,KAAL,GAAaN,IAAb;;AAEA,QAAIA,IAAJ,EAAU;AACR,YAAKI,GAAL,IAAY,MAAMJ,IAAlB;AACD;AAX+C;AAYjD;;0BA0CDO,S,sBAAUC,O,EAAS;AACjB,QAAI,KAAKZ,OAAL,CAAaa,eAAjB,EAAkC;AAChC,aAAOD,QAAQE,WAAf;AACD;;AAED,WAAOF,QAAQG,UAAR,CAAmBC,GAAnB,CAAuB,KAAKhB,OAAL,CAAaS,GAApC,CAAP;AACD,G;;0BAEDQ,W,wBAAYL,O,EAASM,O,EAAS;AAC5B,QAAMC,QAAQ,KAAKR,SAAL,CAAeC,OAAf,CAAd;;AAEA,QAAIO,KAAJ,EAAW;AACT,aAAOA,MAAMC,MAAN,YAAchB,MAAM,KAAKA,IAAzB,IAAkCc,OAAlC,EAAP;AACD;;AAED,WAAO,IAAP;AACD,G;;;;wBAxDU;AACT,aAAO,KAAKb,KAAZ;AACD;;;wBAEU;AACT,UAAI,KAAKD,IAAT,EAAe;AACb,eAAO,KAAKJ,OAAL,CAAaqB,KAAb,GAAqB,IAArB,GAA4B,KAAKjB,IAAjC,GAAwC,GAA/C;AACD;;AAED,aAAO,KAAKJ,OAAL,CAAaqB,KAApB;AACD;;;wBAEa;AACZ,aAAO,KAAKf,QAAZ;AACD;;;wBAEe;AACd,aAAO,KAAKC,UAAZ;AACD;;;wBAEgB;AACf,UAAI,KAAKN,SAAT,EAAoB;AAClB,eAAO,KAAKA,SAAL,CAAeqB,IAAtB;AACD;;AAED,UAAI,KAAKlB,IAAT,EAAe;AACb,eAAO,KAAKJ,OAAL,CAAauB,QAAb,GAAwB,GAAxB,GAA8B,KAAKnB,IAA1C;AACD;;AAED,aAAO,KAAKJ,OAAL,CAAauB,QAApB;AACD;;;wBAEQ;AACP,aAAO,KAAKf,GAAZ;AACD;;;wBAEU;AACT,aAAO,KAAKE,KAAZ;AACD;;;;;;kBArDkBX,a","file":"element-column.js","sourcesContent":["import Column from './column';\n\nexport default class ElementColumn extends Column {\n  constructor({element, rawColumn, type, id, part}) {\n    super();\n\n    this._type = type;\n    this._element = element;\n    this._rawColumn = rawColumn;\n    this._id = id || element.key;\n    this._part = part;\n\n    if (part) {\n      this._id += '_' + part;\n    }\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get name() {\n    if (this.part) {\n      return this.element.label + ' (' + this.part + ')';\n    }\n\n    return this.element.label;\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  get rawColumn() {\n    return this._rawColumn;\n  }\n\n  get columnName() {\n    if (this.rawColumn) {\n      return this.rawColumn.name;\n    }\n\n    if (this.part) {\n      return this.element.dataName + '_' + this.part;\n    }\n\n    return this.element.dataName;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get part() {\n    return this._part;\n  }\n\n  valueFrom(feature) {\n    if (this.element.isStatusElement) {\n      return feature.statusValue;\n    }\n\n    return feature.formValues.get(this.element.key);\n  }\n\n  exportValue(feature, options) {\n    const value = this.valueFrom(feature);\n\n    if (value) {\n      return value.format({part: this.part, ...options});\n    }\n\n    return null;\n  }\n}\n"]}