{"version":3,"sources":["../../src/schema/element-column.js"],"names":["ElementColumn","element","rawColumn","id","part","_element","_rawColumn","_id","key","_part","valueFrom","feature","isStatusElement","statusValue","formValues","get","exportValue","options","value","format","label","name","dataName"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,a;;;AACnB,+BAA4C;AAAA,QAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,QAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,QAAXC,EAAW,QAAXA,EAAW;AAAA,QAAPC,IAAO,QAAPA,IAAO;;AAAA;;AAAA,iDAC1C,kBAD0C;;AAG1C,UAAKC,QAAL,GAAgBJ,OAAhB;AACA,UAAKK,UAAL,GAAkBJ,SAAlB;AACA,UAAKK,GAAL,GAAWJ,MAAMF,QAAQO,GAAzB;AACA,UAAKC,KAAL,GAAaL,IAAb;;AAEA,QAAIA,IAAJ,EAAU;AACR,YAAKG,GAAL,IAAY,MAAMH,IAAlB;AACD;AAVyC;AAW3C;;0BAsCDM,S,sBAAUC,O,EAAS;AACjB,QAAI,KAAKV,OAAL,CAAaW,eAAjB,EAAkC;AAChC,aAAOD,QAAQE,WAAf;AACD;;AAED,WAAOF,QAAQG,UAAR,CAAmBC,GAAnB,CAAuB,KAAKd,OAAL,CAAaO,GAApC,CAAP;AACD,G;;0BAEDQ,W,wBAAYL,O,EAASM,O,EAAS;AAC5B,QAAMC,QAAQ,KAAKR,SAAL,CAAeC,OAAf,CAAd;;AAEA,QAAIO,KAAJ,EAAW;AACT,aAAOA,MAAMC,MAAN,YAAcf,MAAM,KAAKA,IAAzB,IAAkCa,OAAlC,EAAP;AACD;;AAED,WAAO,IAAP;AACD,G;;;;wBApDU;AACT,aAAO,QAAP;AACD;;;wBAEU;AACT,aAAO,KAAKhB,OAAL,CAAamB,KAApB;AACD;;;wBAEa;AACZ,aAAO,KAAKf,QAAZ;AACD;;;wBAEe;AACd,aAAO,KAAKC,UAAZ;AACD;;;wBAEgB;AACf,UAAI,KAAKJ,SAAT,EAAoB;AAClB,eAAO,KAAKA,SAAL,CAAemB,IAAtB;AACD;;AAED,UAAI,KAAKjB,IAAT,EAAe;AACb,eAAO,KAAKH,OAAL,CAAaqB,QAAb,GAAwB,GAAxB,GAA8B,KAAKlB,IAA1C;AACD;;AAED,aAAO,KAAKH,OAAL,CAAaqB,QAApB;AACD;;;wBAEQ;AACP,aAAO,KAAKf,GAAZ;AACD;;;wBAEU;AACT,aAAO,KAAKE,KAAZ;AACD;;;;;;kBAhDkBT,a","file":"element-column.js","sourcesContent":["import Column from './column';\n\nexport default class ElementColumn extends Column {\n  constructor({element, rawColumn, id, part}) {\n    super();\n\n    this._element = element;\n    this._rawColumn = rawColumn;\n    this._id = id || element.key;\n    this._part = part;\n\n    if (part) {\n      this._id += '_' + part;\n    }\n  }\n\n  get type() {\n    return 'string';\n  }\n\n  get name() {\n    return this.element.label;\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  get rawColumn() {\n    return this._rawColumn;\n  }\n\n  get columnName() {\n    if (this.rawColumn) {\n      return this.rawColumn.name;\n    }\n\n    if (this.part) {\n      return this.element.dataName + '_' + this.part;\n    }\n\n    return this.element.dataName;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get part() {\n    return this._part;\n  }\n\n  valueFrom(feature) {\n    if (this.element.isStatusElement) {\n      return feature.statusValue;\n    }\n\n    return feature.formValues.get(this.element.key);\n  }\n\n  exportValue(feature, options) {\n    const value = this.valueFrom(feature);\n\n    if (value) {\n      return value.format({part: this.part, ...options});\n    }\n\n    return null;\n  }\n}\n"]}