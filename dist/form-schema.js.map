{"version":3,"sources":["../src/form-schema.js"],"names":["SYSTEM_COLUMNS","FormSchema","form","rawColumns","repeatableColumns","fullSchema","container","_columns","_rawColumns","_rawColumnsByKey","_columnsByKey","column","indexOf","name","field","key","part","setupColumns","repeatableSchemas","repeatableSchemasByKey","repeatables","elementsOfType","repeatable","childSchema","push","addSystemColumn","statusField","isEnabled","addRawElementColumn","_status","isAssignmentEnabled","isProjectEnabled","setupElementColumns","toLowerCase","replace"],"mappings":"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","file":"form-schema.js","sourcesContent":["import RepeatableSchema from './repeatable-schema';\nimport FormFieldSchema from './form-field-schema';\n\nconst SYSTEM_COLUMNS = [\n  '_record_id',\n  '_project_id',\n  '_assigned_to_id',\n  '_status',\n  '_latitude',\n  '_longitude',\n  '_created_at',\n  '_updated_at',\n  '_version',\n  '_created_by_id',\n  '_updated_by_id',\n  '_server_created_at',\n  '_server_updated_at',\n  '_geometry',\n  '_altitude',\n  '_speed',\n  '_course',\n  '_horizontal_accuracy',\n  '_vertical_accuracy',\n  '_changeset_id',\n  '_title',\n  '_created_latitude',\n  '_created_longitude',\n  '_created_geometry',\n  '_created_altitude',\n  '_created_horizontal_accuracy',\n  '_updated_latitude',\n  '_updated_longitude',\n  '_updated_geometry',\n  '_updated_altitude',\n  '_updated_horizontal_accuracy',\n  '_created_duration',\n  '_updated_duration',\n  '_edited_duration'\n];\n\nexport default class FormSchema extends FormFieldSchema {\n  constructor(form, rawColumns, repeatableColumns, {fullSchema = false}) {\n    super({fullSchema});\n\n    this.form = form;\n    this.container = form;\n\n    this._columns = [];\n    this._rawColumns = rawColumns;\n\n    this._rawColumnsByKey = {};\n    this._columnsByKey = {};\n\n    for (const column of rawColumns) {\n      if (SYSTEM_COLUMNS.indexOf(column.name) !== -1) {\n        this._rawColumnsByKey[column.name] = column;\n      } else if (column.field) {\n        const key = column.part ? column.field + '_' + column.part : column.field;\n        this._rawColumnsByKey[key] = column;\n      }\n    }\n\n    this.setupColumns();\n\n    this.repeatableSchemas = [];\n    this.repeatableSchemasByKey = {};\n\n    const repeatables = this.form.elementsOfType('Repeatable');\n\n    for (const repeatable of repeatables) {\n      const childSchema = new RepeatableSchema(this, repeatable, repeatableColumns[repeatable.key], {fullSchema});\n\n      this.repeatableSchemas.push(childSchema);\n      this.repeatableSchemasByKey[repeatable.key] = childSchema;\n    }\n  }\n\n  setupColumns() {\n    if (this.fullSchema) {\n      this.addSystemColumn('Record ID', 'id', '_record_id');\n    }\n\n    if (this.form.statusField.isEnabled) {\n      this.addRawElementColumn(this.form.statusField,\n                               this._rawColumnsByKey._status,\n                               '_status',\n                               null,\n                               '_status');\n    }\n\n    if (this.fullSchema) {\n      this.addSystemColumn('Geometry', 'geometryAsGeoJSON', '_geometry', 'geometry');\n      this.addSystemColumn('Latitude', 'latitude', '_latitude', 'double');\n      this.addSystemColumn('Longitude', 'longitude', '_longitude', 'double');\n\n      this.addSystemColumn('Client Created', 'clientCreatedAt', '_created_at', 'timestamp');\n      this.addSystemColumn('Client Updated', 'clientUpdatedAt', '_updated_at', 'timestamp');\n\n      this.addSystemColumn('Altitude', 'altitude', '_altitude', 'double');\n      this.addSystemColumn('Accuracy', 'horizontalAccuracy', '_accuracy', 'double');\n      this.addSystemColumn('Changeset', 'changesetID', '_changeset_id', 'integer');\n\n      this.addSystemColumn('Created Duration', 'createdDuration', '_created_duration', 'integer');\n      this.addSystemColumn('Updated Duration', 'updatedDuration', '_updated_duration', 'integer');\n      this.addSystemColumn('Edited Duration', 'editedDuration', '_edited_duration', 'integer');\n    }\n\n    this.addSystemColumn('Version', 'version', '_version', 'integer');\n    this.addSystemColumn('Created', 'createdAt', '_server_created_at', 'timestamp');\n    this.addSystemColumn('Updated', 'updatedAt', '_server_updated_at', 'timestamp');\n    this.addSystemColumn('Created By', 'createdByName', '_created_by', 'string');\n    this.addSystemColumn('Updated By', 'updatedByName', '_updated_by', 'string');\n\n    if (this.form.isAssignmentEnabled) {\n      this.addSystemColumn('Assigned', 'assignedTo', '_assigned_to_id', 'string');\n    }\n\n    if (this.form.isProjectEnabled) {\n      this.addSystemColumn('Project', 'project', '_project_id', 'string');\n    }\n\n    this.setupElementColumns();\n  }\n\n  get tableName() {\n    return this.form.name.toLowerCase().replace(/ /g, '_');\n  }\n}\n"]}